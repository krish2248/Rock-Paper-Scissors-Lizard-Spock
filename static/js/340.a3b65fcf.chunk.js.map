{"version":3,"file":"static/js/340.a3b65fcf.chunk.js","mappings":"0WAOEA,EAAAC,Q,UASoB,CAAC,G,ICdYC,E,IDO/BC,EAAAC,EACAC,OAAAA,OAAA,IAAAF,EAAS,EAAAA,E,IACTG,aAAAA,OAAA,IAAAC,EAAe,EAAAA,E,IACfC,aAAAA,OAAA,IAAAC,GAAeA,E,IACfC,UAAAA,OAAA,IAAAC,GAAYA,EACZC,EAAAR,EAAAQ,OACGC,E,oIAAAC,CAAAV,EAAA,oEAGCW,EAAkBC,EAAAA,OAAgC,MAClDC,EAAYD,EAAAA,QAAa,G,EAECA,EAAAA,SAA8B,MAAvDE,EAAAC,EAAA,GAAUC,EAAAD,EAAA,G,EAESH,EAAAA,SAA4B,MAA/CK,EAAAC,EAAA,GAAOC,EAAAD,EAAA,GAERE,EAAa,WACK,oBAAXZ,GAETA,EAAOa,KAAKC,MAGVT,EAAUU,SAEZP,EAA8B,IAAlBM,KAAKR,YAInBK,EAASG,KACV,ECpCgCxB,EDuCtB,WAmBT,OAlBA,mCAAiB0B,MAAK,SAAAC,GACI,IAAAC,EAAnBb,EAAUU,UAGbZ,EAAgBY,QAAhB,QAAAG,EAA0BD,EAAIE,YAA9B,IAAAD,EAAAA,EAAsCD,EAAG,QAASE,KAElDd,EAAUU,SAAU,EAEpB,IAAIZ,EAAgBY,QAApBK,EAAA,CACEhC,IAAKiC,MAAMC,QAAQlC,GAAOA,EAAM,CAACA,GACjCK,OAAAA,EACA8B,KAAM7B,EACNM,OAAQY,GACLX,IAGR,IAEM,WACLI,EAAUU,SAAU,CACrB,CACF,GC5DDS,EAAAA,EAAAA,WAAgBlC,EAAU,IDiE1Bc,EAAAA,WAAgB,WACVD,EAAgBY,SAAWN,GAC7BE,EACE,IAAIR,EAAgBY,QAApBK,EAAA,CACEhC,IAAKiC,MAAMC,QAAQlC,GAAOA,EAAM,CAACA,GACjCK,OAAAA,EACAO,OAAQY,GACLX,IAWV,GAAE,CAACwB,KAAKC,UAAUtC,KAInBgB,EAAAA,WAAgB,WACVK,IACFA,EAAMhB,OAAOA,GACbgB,EAAMc,KAAK7B,GAOd,GAAE,CAACD,EAAQC,IAEZ,IAAMiC,EAAqBvB,EAAAA,aACzB,SAACwB,GACwB,qBAAZA,IACTA,EAAU,CAAC,GAGRnB,IAAWb,GAAiBgC,EAAQC,qBAIrC/B,GACFW,EAAMqB,OAGJF,EAAQlC,cACVe,EAAMc,KAAKK,EAAQlC,cAGrBe,EAAMkB,KAAKC,EAAQG,IACpB,GACD,CAACtB,EAAOb,EAAcE,IAGlBgC,EAAO1B,EAAAA,aACX,SAAA2B,GACOtB,GAGLA,EAAMqB,KAAKC,EACZ,GACD,CAACtB,IAGGuB,EAAQ5B,EAAAA,aACZ,SAAA2B,GACOtB,GAGLA,EAAMuB,MAAMD,EACb,GACD,CAACtB,IAaH,MAVqC,CACnCkB,EACA,CACElB,MAAAA,EACAqB,KAAAA,EACAE,MAAAA,EACA1B,SAAAA,GAKL,C,6QE3Jc,SAAS2B,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIC,OAEZ,SAAcC,EAAQC,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQI,OAAOC,UAAUC,eAAe/B,KAAK4B,EAAQH,IAEpC,QADfG,GAAS,EAAAI,EAAA,GAAeJ,MAG1B,OAAOA,CACT,CDDiB,CAAcJ,EAAQC,GACjC,GAAKE,EAAL,CACA,IAAIM,EAAOJ,OAAOK,yBAAyBP,EAAMF,GACjD,OAAIQ,EAAKX,IACAW,EAAKX,IAAItB,KAAKmC,UAAUC,OAAS,EAAIZ,EAASE,GAEhDO,EAAKI,KALK,CAMnB,EAEKjB,EAAKkB,MAAMrC,KAAMkC,UAC1B,C,cEhBMI,EAAeV,OAAOW,OAAO,MACnCD,EAAmB,KAAI,IACvBA,EAAoB,MAAI,IACxBA,EAAmB,KAAI,IACvBA,EAAmB,KAAI,IACvBA,EAAsB,QAAI,IAC1BA,EAAsB,QAAI,IAC1BA,EAAmB,KAAI,IACvB,IAAME,EAAuBZ,OAAOW,OAAO,MAC3CX,OAAOa,KAAKH,GAAcI,SAAQ,SAAAC,GAC9BH,EAAqBF,EAAaK,IAAQA,CAC9C,ICPA,IDQA,IAAMC,EAAe,CAAEC,KAAM,QAASC,KAAM,gBEXtCC,EAAiC,oBAATC,MACT,qBAATA,MACqC,6BAAzCpB,OAAOC,UAAUoB,SAASlD,KAAKiD,MACjCE,EAA+C,oBAAhBC,YA4B/BC,EAAqB,SAACN,EAAMtE,GAC9B,IAAM6E,EAAa,IAAIC,WAKvB,OAJAD,EAAWnE,OAAS,WAChB,IAAMqE,EAAUF,EAAWG,OAAOC,MAAM,KAAK,GAC7CjF,EAAS,KAAO+E,GAAW,IAC/B,EACOF,EAAWK,cAAcZ,EACpC,EACA,EA7BqB,SAAHvE,EAAoBoF,EAAgBnF,GAAa,IALpDoF,EAKSf,EAAItE,EAAJsE,KAAMC,EAAIvE,EAAJuE,KAC1B,OAAIC,GAAkBD,aAAgBE,KAC9BW,EACOnF,EAASsE,GAGTM,EAAmBN,EAAMtE,GAG/B0E,IACJJ,aAAgBK,cAfVS,EAegCd,EAdN,oBAAvBK,YAAYU,OACpBV,YAAYU,OAAOD,GACnBA,GAAOA,EAAIE,kBAAkBX,cAa3BQ,EACOnF,EAASsE,GAGTM,EAAmB,IAAIJ,KAAK,CAACF,IAAQtE,GAI7CA,EAAS8D,EAAaO,IAASC,GAAQ,IAClD,ED9BMiB,EAAQ,mEAERC,EAA+B,qBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC9DC,EAAI,EAAGA,EAAIH,EAAM5B,OAAQ+B,IAC9BF,EAAOD,EAAMI,WAAWD,IAAMA,EAE3B,IELDhB,EAA+C,oBAAhBC,YA4B/BiB,EAAqB,SAACtB,EAAMuB,GAC9B,GAAInB,EAAuB,CACvB,IAAMoB,EFTQ,SAACC,GACnB,IAA8DL,EAAUM,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAOpC,OAAe0C,EAAMN,EAAOpC,OAAW2C,EAAI,EACnC,MAA9BP,EAAOA,EAAOpC,OAAS,KACvByC,IACkC,MAA9BL,EAAOA,EAAOpC,OAAS,IACvByC,KAGR,IAAMG,EAAc,IAAI5B,YAAYyB,GAAeI,EAAQ,IAAIf,WAAWc,GAC1E,IAAKb,EAAI,EAAGA,EAAIW,EAAKX,GAAK,EACtBM,EAAWR,EAAOO,EAAOJ,WAAWD,IACpCO,EAAWT,EAAOO,EAAOJ,WAAWD,EAAI,IACxCQ,EAAWV,EAAOO,EAAOJ,WAAWD,EAAI,IACxCS,EAAWX,EAAOO,EAAOJ,WAAWD,EAAI,IACxCc,EAAMF,KAAQN,GAAY,EAAMC,GAAY,EAC5CO,EAAMF,MAAoB,GAAXL,IAAkB,EAAMC,GAAY,EACnDM,EAAMF,MAAoB,EAAXJ,IAAiB,EAAiB,GAAXC,EAE1C,OAAOI,CACX,CEVwBE,CAAOnC,GACvB,OAAOoC,EAAUZ,EAASD,EAC9B,CAEI,MAAO,CAAEE,QAAQ,EAAMzB,KAAAA,EAE/B,EACMoC,EAAY,SAACpC,EAAMuB,GACrB,MACS,SADDA,GAEOvB,aAAgBK,YAAc,IAAIH,KAAK,CAACF,IAGxCA,CAEnB,EACA,EA7CqB,SAACqC,EAAed,GACjC,GAA6B,kBAAlBc,EACP,MAAO,CACHtC,KAAM,UACNC,KAAMoC,EAAUC,EAAed,IAGvC,IAAMxB,EAAOsC,EAAcC,OAAO,GAClC,MAAa,MAATvC,EACO,CACHA,KAAM,UACNC,KAAMsB,EAAmBe,EAAcE,UAAU,GAAIhB,IAG1C7B,EAAqBK,GAIjCsC,EAAchD,OAAS,EACxB,CACEU,KAAML,EAAqBK,GAC3BC,KAAMqC,EAAcE,UAAU,IAEhC,CACExC,KAAML,EAAqBK,IARxBD,CAUf,EC3BM0C,EAAYC,OAAOC,aAAa,ICI/B,SAASC,EAAQ7B,GACtB,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIjB,KAAO8C,EAAQ5D,UACtB+B,EAAIjB,GAAO8C,EAAQ5D,UAAUc,GAE/B,OAAOiB,CACT,CAhBkB8B,CAAM9B,EACxB,CA0BA6B,EAAQ5D,UAAU8D,GAClBF,EAAQ5D,UAAU+D,iBAAmB,SAASC,EAAOC,GAInD,OAHA9F,KAAK+F,WAAa/F,KAAK+F,YAAc,CAAC,GACrC/F,KAAK+F,WAAW,IAAMF,GAAS7F,KAAK+F,WAAW,IAAMF,IAAU,IAC7DG,KAAKF,GACD9F,IACT,EAYAyF,EAAQ5D,UAAUoE,KAAO,SAASJ,EAAOC,GACvC,SAASH,IACP3F,KAAKkG,IAAIL,EAAOF,GAChBG,EAAGzD,MAAMrC,KAAMkC,UACjB,CAIA,OAFAyD,EAAGG,GAAKA,EACR9F,KAAK2F,GAAGE,EAAOF,GACR3F,IACT,EAYAyF,EAAQ5D,UAAUqE,IAClBT,EAAQ5D,UAAUsE,eAClBV,EAAQ5D,UAAUuE,mBAClBX,EAAQ5D,UAAUwE,oBAAsB,SAASR,EAAOC,GAItD,GAHA9F,KAAK+F,WAAa/F,KAAK+F,YAAc,CAAC,EAGlC,GAAK7D,UAAUC,OAEjB,OADAnC,KAAK+F,WAAa,CAAC,EACZ/F,KAIT,IAUIsG,EAVAC,EAAYvG,KAAK+F,WAAW,IAAMF,GACtC,IAAKU,EAAW,OAAOvG,KAGvB,GAAI,GAAKkC,UAAUC,OAEjB,cADOnC,KAAK+F,WAAW,IAAMF,GACtB7F,KAKT,IAAK,IAAIkE,EAAI,EAAGA,EAAIqC,EAAUpE,OAAQ+B,IAEpC,IADAoC,EAAKC,EAAUrC,MACJ4B,GAAMQ,EAAGR,KAAOA,EAAI,CAC7BS,EAAUC,OAAOtC,EAAG,GACpB,KACF,CASF,OAJyB,IAArBqC,EAAUpE,eACLnC,KAAK+F,WAAW,IAAMF,GAGxB7F,IACT,EAUAyF,EAAQ5D,UAAU4E,KAAO,SAASZ,GAChC7F,KAAK+F,WAAa/F,KAAK+F,YAAc,CAAC,EAKtC,IAHA,IAAIW,EAAO,IAAInG,MAAM2B,UAAUC,OAAS,GACpCoE,EAAYvG,KAAK+F,WAAW,IAAMF,GAE7B3B,EAAI,EAAGA,EAAIhC,UAAUC,OAAQ+B,IACpCwC,EAAKxC,EAAI,GAAKhC,UAAUgC,GAG1B,GAAIqC,EAEG,CAAIrC,EAAI,EAAb,IAAK,IAAWW,GADhB0B,EAAYA,EAAUI,MAAM,IACIxE,OAAQ+B,EAAIW,IAAOX,EACjDqC,EAAUrC,GAAG7B,MAAMrC,KAAM0G,EADKvE,CAKlC,OAAOnC,IACT,EAGAyF,EAAQ5D,UAAU+E,aAAenB,EAAQ5D,UAAU4E,KAUnDhB,EAAQ5D,UAAUgF,UAAY,SAAShB,GAErC,OADA7F,KAAK+F,WAAa/F,KAAK+F,YAAc,CAAC,EAC/B/F,KAAK+F,WAAW,IAAMF,IAAU,EACzC,EAUAJ,EAAQ5D,UAAUiF,aAAe,SAASjB,GACxC,QAAU7F,KAAK6G,UAAUhB,GAAO1D,MAClC,ECxKO,IAAM4E,EACW,qBAATC,KACAA,KAEgB,qBAAXC,OACLA,OAGAC,SAAS,cAATA,GCPR,SAASC,EAAKvD,GAAc,QAAAwD,EAAAlF,UAAAC,OAANkF,EAAI,IAAA9G,MAAA6G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAApF,UAAAoF,GAC7B,OAAOD,EAAKE,QAAO,SAACC,EAAKC,GAIrB,OAHI7D,EAAI9B,eAAe2F,KACnBD,EAAIC,GAAK7D,EAAI6D,IAEVD,CACX,GAAG,CAAC,EACR,CAEA,IAAME,EAAqBC,EAAAA,WACrBC,EAAuBD,EAAAA,aACtB,SAASE,EAAsBjE,EAAKkE,GACnCA,EAAKC,iBACLnE,EAAIoE,aAAeN,EAAmBpG,KAAKqG,GAC3C/D,EAAIqE,eAAiBL,EAAqBtG,KAAKqG,KAG/C/D,EAAIoE,aAAeL,EAAAA,WAAAA,KAA2BA,GAC9C/D,EAAIqE,eAAiBN,EAAAA,aAAAA,KAA6BA,GAE1D,CAEA,IAAMO,EAAkB,KCrB0B,ICC7BC,EDAfC,EAAc,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAChB,SAAAA,EAAYK,EAAQC,EAAaC,GAAS,IAAAC,EAIT,OAJSC,EAAAA,EAAAA,GAAA,KAAAT,IACtCQ,EAAAL,EAAAxI,KAAA,KAAM0I,IACDC,YAAcA,EACnBE,EAAKD,QAAUA,EACfC,EAAK/F,KAAO,iBAAiB+F,CACjC,CAAC,OAAAE,EAAAA,EAAAA,GAAAV,EAAA,CANe,EAMfW,EAAAA,EAAAA,GANwBC,QAQhBC,EAAS,SAAAC,IAAAZ,EAAAA,EAAAA,GAAAW,EAAAC,GAAA,IAAAC,GAAAX,EAAAA,EAAAA,GAAAS,GAOlB,SAAAA,EAAYnB,GAAM,IAAAsB,EAMY,OANZP,EAAAA,EAAAA,GAAA,KAAAI,IACdG,EAAAD,EAAApJ,KAAA,OACKsJ,UAAW,EAChBxB,GAAqByB,EAAAA,EAAAA,GAAAF,GAAOtB,GAC5BsB,EAAKtB,KAAOA,EACZsB,EAAKG,MAAQzB,EAAKyB,MAClBH,EAAKI,OAAS1B,EAAK0B,OAAOJ,CAC9B,CAuFkB,OAtFlBN,EAAAA,EAAAA,GAAAG,EAAA,EAAAtG,IAAA,UAAAP,MASA,SAAQqG,EAAQC,EAAaC,GAEzB,OADAxH,GAAAsI,EAAAA,EAAAA,GAAAR,EAAApH,WAAA,qBAAA9B,KAAA,KAAmB,QAAS,IAAIqI,EAAeK,EAAQC,EAAaC,IAC7D3I,IACX,GACA,CAAA2C,IAAA,OAAAP,MAGA,WAGI,OAFApC,KAAK0J,WAAa,UAClB1J,KAAK2J,SACE3J,IACX,GACA,CAAA2C,IAAA,QAAAP,MAGA,WAKI,MAJwB,YAApBpC,KAAK0J,YAAgD,SAApB1J,KAAK0J,aACtC1J,KAAK4J,UACL5J,KAAK6J,WAEF7J,IACX,GACA,CAAA2C,IAAA,OAAAP,MAKA,SAAK0H,GACuB,SAApB9J,KAAK0J,YACL1J,KAAK+J,MAAMD,EAKnB,GACA,CAAAnH,IAAA,SAAAP,MAKA,WACIpC,KAAK0J,WAAa,OAClB1J,KAAKqJ,UAAW,EAChBlI,GAAAsI,EAAAA,EAAAA,GAAAR,EAAApH,WAAA,qBAAA9B,KAAA,KAAmB,OACvB,GACA,CAAA4C,IAAA,SAAAP,MAMA,SAAOU,GACH,IAAMkH,EAASC,EAAanH,EAAM9C,KAAKwJ,OAAOnF,YAC9CrE,KAAKkK,SAASF,EAClB,GACA,CAAArH,IAAA,WAAAP,MAKA,SAAS4H,GACL7I,GAAAsI,EAAAA,EAAAA,GAAAR,EAAApH,WAAA,qBAAA9B,KAAA,KAAmB,SAAUiK,EACjC,GACA,CAAArH,IAAA,UAAAP,MAKA,SAAQ+H,GACJnK,KAAK0J,WAAa,SAClBvI,GAAAsI,EAAAA,EAAAA,GAAAR,EAAApH,WAAA,qBAAA9B,KAAA,KAAmB,QAASoK,EAChC,GACA,CAAAxH,IAAA,QAAAP,MAKA,SAAMgI,GAAW,KAACnB,CAAA,CArGA,CAASxD,GCTzB4E,EAAW,mEAAmE5G,MAAM,IAAKtB,EAAS,GAAImI,EAAM,CAAC,EAC/GC,EAAO,EAAGrG,EAAI,EAQX,SAASsG,EAAOC,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUL,EAASI,EAAMtI,GAAUuI,EACnCD,EAAME,KAAKC,MAAMH,EAAMtI,SAClBsI,EAAM,GACf,OAAOC,CACX,CAqBO,SAASG,IACZ,IAAMC,EAAMN,GAAQ,IAAIO,MACxB,OAAID,IAAQ3C,GACDoC,EAAO,EAAGpC,EAAO2C,GACrBA,EAAM,IAAMN,EAAOD,IAC9B,CAIA,KAAOrG,EAAI/B,EAAQ+B,IACfoG,EAAID,EAASnG,IAAMA,ECzChB,SAASsG,EAAO5G,GACnB,IAAIoH,EAAM,GACV,IAAK,IAAI9G,KAAKN,EACNA,EAAI9B,eAAeoC,KACf8G,EAAI7I,SACJ6I,GAAO,KACXA,GAAOC,mBAAmB/G,GAAK,IAAM+G,mBAAmBrH,EAAIM,KAGpE,OAAO8G,CACX,CCjBA,IAAI5I,GAAQ,EACZ,IACIA,EAAkC,qBAAnB8I,gBACX,oBAAqB,IAAIA,cACjC,CACA,MAAOC,IAEH,CAEG,IAAMC,EAAUhJ,ECPhB,SAASiJ,EAAIvD,GAChB,IAAMwD,EAAUxD,EAAKwD,QAErB,IACI,GAAI,qBAAuBJ,kBAAoBI,GAAWF,GACtD,OAAO,IAAIF,cAEnB,CACA,MAAOK,GAAK,CACZ,IAAKD,EACD,IACI,OAAO,IAAI3D,EAAW,CAAC,UAAU6D,OAAO,UAAUC,KAAK,OAAM,oBACjE,CACA,MAAOF,GAAK,CAEpB,CCVA,SAASG,IAAU,CACnB,IAAMC,EAIK,MAHK,IAAIT,EAAe,CAC3BI,SAAS,IAEMM,aAEVC,EAAO,SAAAC,IAAAxD,EAAAA,EAAAA,GAAAuD,EAAAC,GAAA,IAAAvD,GAAAC,EAAAA,EAAAA,GAAAqD,GAOhB,SAAAA,EAAY/D,GAAM,IAAAc,EAGd,IAHcC,EAAAA,EAAAA,GAAA,KAAAgD,IACdjD,EAAAL,EAAAxI,KAAA,KAAM+H,IACDiE,SAAU,EACS,qBAAbC,SAA0B,CACjC,IAAMC,EAAQ,WAAaD,SAASE,SAChCC,EAAOH,SAASG,KAEfA,IACDA,EAAOF,EAAQ,MAAQ,MAE3BrD,EAAKwD,GACoB,qBAAbJ,UACJlE,EAAKuE,WAAaL,SAASK,UAC3BF,IAASrE,EAAKqE,KACtBvD,EAAK0D,GAAKxE,EAAKyE,SAAWN,CAC9B,CAIA,IAAMO,EAAc1E,GAAQA,EAAK0E,YACa,OAA9C5D,EAAKjF,eAAiBgI,IAAYa,EAAY5D,CAClD,CA8LC,OA9LAE,EAAAA,EAAAA,GAAA+C,EAAA,EAAAlJ,IAAA,OAAAtB,IACD,WACI,MAAO,SACX,GACA,CAAAsB,IAAA,SAAAP,MAMA,WACIpC,KAAKyM,MACT,GACA,CAAA9J,IAAA,QAAAP,MAMA,SAAMgI,GAAS,IAAAhB,EAAA,KACXpJ,KAAK0J,WAAa,UAClB,IAAMxI,EAAQ,WACVkI,EAAKM,WAAa,SAClBU,GACJ,EACA,GAAIpK,KAAK+L,UAAY/L,KAAKqJ,SAAU,CAChC,IAAIqD,EAAQ,EACR1M,KAAK+L,UACLW,IACA1M,KAAKiG,KAAK,gBAAgB,aACpByG,GAASxL,GACf,KAEClB,KAAKqJ,WACNqD,IACA1M,KAAKiG,KAAK,SAAS,aACbyG,GAASxL,GACf,IAER,MAEIA,GAER,GACA,CAAAyB,IAAA,OAAAP,MAKA,WACIpC,KAAK+L,SAAU,EACf/L,KAAK2M,SACL3M,KAAK4G,aAAa,OACtB,GACA,CAAAjE,IAAA,SAAAP,MAKA,SAAOU,GAAM,IAAA8J,EAAA,MTpFK,SAACC,EAAgBxI,GAGnC,IAFA,IAAMyI,EAAiBD,EAAepJ,MAAM6B,GACtCwE,EAAU,GACP5F,EAAI,EAAGA,EAAI4I,EAAe3K,OAAQ+B,IAAK,CAC5C,IAAM6I,EAAgB9C,EAAa6C,EAAe5I,GAAIG,GAEtD,GADAyF,EAAQ9D,KAAK+G,GACc,UAAvBA,EAAclK,KACd,KAER,CACA,OAAOiH,CACX,ESwFQkD,CAAclK,EAAM9C,KAAKwJ,OAAOnF,YAAY3B,SAd3B,SAACsH,GAMd,GAJI,YAAc4C,EAAKlD,YAA8B,SAAhBM,EAAOnH,MACxC+J,EAAKK,SAGL,UAAYjD,EAAOnH,KAEnB,OADA+J,EAAK/C,QAAQ,CAAEnB,YAAa,oCACrB,EAGXkE,EAAK1C,SAASF,EAClB,IAII,WAAahK,KAAK0J,aAElB1J,KAAK+L,SAAU,EACf/L,KAAK4G,aAAa,gBACd,SAAW5G,KAAK0J,YAChB1J,KAAKyM,OAKjB,GACA,CAAA9J,IAAA,UAAAP,MAKA,WAAU,IAAA8K,EAAA,KACAC,EAAQ,WACVD,EAAKnD,MAAM,CAAC,CAAElH,KAAM,UACxB,EACI,SAAW7C,KAAK0J,WAChByD,IAKAnN,KAAKiG,KAAK,OAAQkH,EAE1B,GACA,CAAAxK,IAAA,QAAAP,MAMA,SAAM0H,GAAS,IAAAsD,EAAA,KACXpN,KAAKqJ,UAAW,ETxJF,SAACS,EAAStL,GAE5B,IAAM2D,EAAS2H,EAAQ3H,OACjB2K,EAAiB,IAAIvM,MAAM4B,GAC7BkL,EAAQ,EACZvD,EAAQpH,SAAQ,SAACsH,EAAQ9F,GAErBoJ,EAAatD,GAAQ,GAAO,SAAA7E,GACxB2H,EAAe5I,GAAKiB,IACdkI,IAAUlL,GACZ3D,EAASsO,EAAerB,KAAKnG,GAErC,GACJ,GACJ,CS2IQiI,CAAczD,GAAS,SAAChH,GACpBsK,EAAKI,QAAQ1K,GAAM,WACfsK,EAAK/D,UAAW,EAChB+D,EAAKxG,aAAa,QACtB,GACJ,GACJ,GACA,CAAAjE,IAAA,MAAAP,MAKA,WACI,IAAImH,EAAQvJ,KAAKuJ,OAAS,CAAC,EACrBkE,EAASzN,KAAK8H,KAAKyE,OAAS,QAAU,OACxCJ,EAAO,IAEP,IAAUnM,KAAK8H,KAAK4F,oBACpBnE,EAAMvJ,KAAK8H,KAAK6F,gBAAkB9C,KAEjC7K,KAAK2D,gBAAmB4F,EAAMqE,MAC/BrE,EAAMsE,IAAM,GAGZ7N,KAAK8H,KAAKqE,OACR,UAAYsB,GAAqC,MAA3BK,OAAO9N,KAAK8H,KAAKqE,OACpC,SAAWsB,GAAqC,KAA3BK,OAAO9N,KAAK8H,KAAKqE,SAC3CA,EAAO,IAAMnM,KAAK8H,KAAKqE,MAE3B,IAAM4B,EAAevD,EAAOjB,GAE5B,OAAQkE,EACJ,QAF8C,IAArCzN,KAAK8H,KAAKuE,SAAS2B,QAAQ,KAG5B,IAAMhO,KAAK8H,KAAKuE,SAAW,IAAMrM,KAAK8H,KAAKuE,UACnDF,EACAnM,KAAK8H,KAAKmG,MACTF,EAAa5L,OAAS,IAAM4L,EAAe,GACpD,GACA,CAAApL,IAAA,UAAAP,MAMA,WAAmB,IAAX0F,EAAI5F,UAAAC,OAAA,QAAA+L,IAAAhM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEZ,OADAN,OAAOuM,OAAOrG,EAAM,CAAEsE,GAAIpM,KAAKoM,GAAIE,GAAItM,KAAKsM,IAAMtM,KAAK8H,MAChD,IAAIsG,EAAQpO,KAAKqO,MAAOvG,EACnC,GACA,CAAAnF,IAAA,UAAAP,MAOA,SAAQU,EAAMgD,GAAI,IAAAwI,EAAA,KACRC,EAAMvO,KAAKwO,QAAQ,CACrBC,OAAQ,OACR3L,KAAMA,IAEVyL,EAAI5I,GAAG,UAAWG,GAClByI,EAAI5I,GAAG,SAAS,SAAC+I,EAAW/F,GACxB2F,EAAKK,QAAQ,iBAAkBD,EAAW/F,EAC9C,GACJ,GACA,CAAAhG,IAAA,SAAAP,MAKA,WAAS,IAAAwM,EAAA,KACCL,EAAMvO,KAAKwO,UACjBD,EAAI5I,GAAG,OAAQ3F,KAAK6O,OAAOvN,KAAKtB,OAChCuO,EAAI5I,GAAG,SAAS,SAAC+I,EAAW/F,GACxBiG,EAAKD,QAAQ,iBAAkBD,EAAW/F,EAC9C,IACA3I,KAAK8O,QAAUP,CACnB,KAAC1C,CAAA,CA1Ne,CAAS5C,GA4NhBmF,EAAO,SAAAlF,IAAAZ,EAAAA,EAAAA,GAAA8F,EAAAlF,GAAA,IAAAC,GAAAX,EAAAA,EAAAA,GAAA4F,GAOhB,SAAAA,EAAYC,EAAKvG,GAAM,IAAAiH,EAQL,OARKlG,EAAAA,EAAAA,GAAA,KAAAuF,GACnBW,EAAA5F,EAAApJ,KAAA,MACA8H,GAAqByB,EAAAA,EAAAA,GAAAyF,GAAOjH,GAC5BiH,EAAKjH,KAAOA,EACZiH,EAAKN,OAAS3G,EAAK2G,QAAU,MAC7BM,EAAKV,IAAMA,EACXU,EAAKC,OAAQ,IAAUlH,EAAKkH,MAC5BD,EAAKjM,UAAOoL,IAAcpG,EAAKhF,KAAOgF,EAAKhF,KAAO,KAClDiM,EAAKxM,SAASwM,CAClB,CAyHC,OAxHDjG,EAAAA,EAAAA,GAAAsF,EAAA,EAAAzL,IAAA,SAAAP,MAKA,WAAS,IAAA6M,EAAA,KACCnH,EAAOX,EAAKnH,KAAK8H,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAKwD,UAAYtL,KAAK8H,KAAKsE,GAC3BtE,EAAKoH,UAAYlP,KAAK8H,KAAKwE,GAC3B,IAAM6C,EAAOnP,KAAKmP,IAAM,IAAIjE,EAAepD,GAC3C,IACIqH,EAAIC,KAAKpP,KAAKyO,OAAQzO,KAAKqO,IAAKrO,KAAKgP,OACrC,IACI,GAAIhP,KAAK8H,KAAKuH,aAEV,IAAK,IAAInL,KADTiL,EAAIG,uBAAyBH,EAAIG,uBAAsB,GACzCtP,KAAK8H,KAAKuH,aAChBrP,KAAK8H,KAAKuH,aAAavN,eAAeoC,IACtCiL,EAAII,iBAAiBrL,EAAGlE,KAAK8H,KAAKuH,aAAanL,GAI/D,CACA,MAAOqH,GAAK,CACZ,GAAI,SAAWvL,KAAKyO,OAChB,IACIU,EAAII,iBAAiB,eAAgB,2BACzC,CACA,MAAOhE,GAAK,CAEhB,IACI4D,EAAII,iBAAiB,SAAU,MACnC,CACA,MAAOhE,GAAK,CAER,oBAAqB4D,IACrBA,EAAIK,gBAAkBxP,KAAK8H,KAAK0H,iBAEhCxP,KAAK8H,KAAK2H,iBACVN,EAAIO,QAAU1P,KAAK8H,KAAK2H,gBAE5BN,EAAIQ,mBAAqB,WACjB,IAAMR,EAAIzF,aAEV,MAAQyF,EAAIS,QAAU,OAAST,EAAIS,OACnCX,EAAKY,SAKLZ,EAAKjH,cAAa,WACdiH,EAAKN,QAA8B,kBAAfQ,EAAIS,OAAsBT,EAAIS,OAAS,EAC/D,GAAG,GAEX,EACAT,EAAIW,KAAK9P,KAAK8C,KAClB,CACA,MAAOyI,GAOH,YAHAvL,KAAKgI,cAAa,WACdiH,EAAKN,QAAQpD,EACjB,GAAG,EAEP,CACwB,qBAAbwE,WACP/P,KAAKgQ,MAAQ5B,EAAQ6B,gBACrB7B,EAAQ8B,SAASlQ,KAAKgQ,OAAShQ,KAEvC,GACA,CAAA2C,IAAA,UAAAP,MAKA,SAAQ+I,GACJnL,KAAK4G,aAAa,QAASuE,EAAKnL,KAAKmP,KACrCnP,KAAKmQ,SAAQ,EACjB,GACA,CAAAxN,IAAA,UAAAP,MAKA,SAAQgO,GACJ,GAAI,qBAAuBpQ,KAAKmP,KAAO,OAASnP,KAAKmP,IAArD,CAIA,GADAnP,KAAKmP,IAAIQ,mBAAqBjE,EAC1B0E,EACA,IACIpQ,KAAKmP,IAAIkB,OACb,CACA,MAAO9E,GAAK,CAEQ,qBAAbwE,iBACA3B,EAAQ8B,SAASlQ,KAAKgQ,OAEjChQ,KAAKmP,IAAM,IAXX,CAYJ,GACA,CAAAxM,IAAA,SAAAP,MAKA,WACI,IAAMU,EAAO9C,KAAKmP,IAAImB,aACT,OAATxN,IACA9C,KAAK4G,aAAa,OAAQ9D,GAC1B9C,KAAK4G,aAAa,WAClB5G,KAAKmQ,UAEb,GACA,CAAAxN,IAAA,QAAAP,MAKA,WACIpC,KAAKmQ,SACT,KAAC/B,CAAA,CAzIe,CAAS3I,GAkJ7B,GAPA2I,EAAQ6B,cAAgB,EACxB7B,EAAQ8B,SAAW,CAAC,EAMI,qBAAbH,SAEP,GAA2B,oBAAhBQ,YAEPA,YAAY,WAAYC,QAEvB,GAAgC,oBAArB5K,iBAAiC,CAE7CA,iBADyB,eAAgB,EAAa,WAAa,SAChC4K,GAAe,EACtD,CAEJ,SAASA,IACL,IAAK,IAAItM,KAAKkK,EAAQ8B,SACd9B,EAAQ8B,SAASpO,eAAeoC,IAChCkK,EAAQ8B,SAAShM,GAAGmM,OAGhC,CC7YO,IAAMI,EACqC,oBAAZC,SAAqD,oBAApBA,QAAQC,QAEhE,SAACrK,GAAE,OAAKoK,QAAQC,UAAUzQ,KAAKoG,EAAG,EAGlC,SAACA,EAAI0B,GAAY,OAAKA,EAAa1B,EAAI,EAAE,EAG3CsK,GAAYjJ,EAAAA,WAAwBA,EAAAA,aCH3CkJ,GAAqC,qBAAdC,WACI,kBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACTC,GAAE,SAAAnF,IAAAxD,EAAAA,EAAAA,GAAA2I,EAAAnF,GAAA,IAAAvD,GAAAC,EAAAA,EAAAA,GAAAyI,GAOX,SAAAA,EAAYnJ,GAAM,IAAAc,EAE0B,OAF1BC,EAAAA,EAAAA,GAAA,KAAAoI,IACdrI,EAAAL,EAAAxI,KAAA,KAAM+H,IACDnE,gBAAkBmE,EAAK0E,YAAY5D,CAC5C,CAiJC,OAjJAE,EAAAA,EAAAA,GAAAmI,EAAA,EAAAtO,IAAA,OAAAtB,IACD,WACI,MAAO,WACX,GAAC,CAAAsB,IAAA,SAAAP,MACD,WACI,GAAKpC,KAAKkR,QAAV,CAIA,IAAM7C,EAAMrO,KAAKqO,MACX8C,EAAYnR,KAAK8H,KAAKqJ,UAEtBrJ,EAAO+I,GACP,CAAC,EACD1J,EAAKnH,KAAK8H,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChM9H,KAAK8H,KAAKuH,eACVvH,EAAKsJ,QAAUpR,KAAK8H,KAAKuH,cAE7B,IACIrP,KAAKqR,GACyBR,GAIpB,IAAID,GAAUvC,EAAK8C,EAAWrJ,GAH9BqJ,EACI,IAAIP,GAAUvC,EAAK8C,GACnB,IAAIP,GAAUvC,EAEhC,CACA,MAAOlD,IACH,OAAOnL,KAAK4G,aAAa,QAASuE,GACtC,CACAnL,KAAKqR,GAAGhN,WAAarE,KAAKwJ,OAAOnF,YDrCR,cCsCzBrE,KAAKsR,mBAtBL,CAuBJ,GACA,CAAA3O,IAAA,oBAAAP,MAKA,WAAoB,IAAAgH,EAAA,KAChBpJ,KAAKqR,GAAGE,OAAS,WACTnI,EAAKtB,KAAK0J,WACVpI,EAAKiI,GAAGI,QAAQC,QAEpBtI,EAAK6D,QACT,EACAjN,KAAKqR,GAAGM,QAAU,SAACC,GAAU,OAAKxI,EAAKS,QAAQ,CAC3CnB,YAAa,8BACbC,QAASiJ,GACX,EACF5R,KAAKqR,GAAGQ,UAAY,SAACC,GAAE,OAAK1I,EAAKyF,OAAOiD,EAAGhP,KAAK,EAChD9C,KAAKqR,GAAGU,QAAU,SAACxG,GAAC,OAAKnC,EAAKuF,QAAQ,kBAAmBpD,EAAE,CAC/D,GAAC,CAAA5I,IAAA,QAAAP,MACD,SAAM0H,GAAS,IAAA8C,EAAA,KACX5M,KAAKqJ,UAAW,EAGhB,IADA,IAAA2I,EAAA,WAEI,IAAMhI,EAASF,EAAQ5F,GACjB+N,EAAa/N,IAAM4F,EAAQ3H,OAAS,EAC1CmL,EAAatD,EAAQ4C,EAAKjJ,gBAAgB,SAACb,GAmBvC,IAGQ8J,EAAKyE,GAAGvB,KAAKhN,EAKrB,CACA,MAAOyI,GACP,CACI0G,GAGAxB,GAAS,WACL7D,EAAKvD,UAAW,EAChBuD,EAAKhG,aAAa,QACtB,GAAGgG,EAAK5E,aAEhB,GACJ,EA1CS9D,EAAI,EAAGA,EAAI4F,EAAQ3H,OAAQ+B,IAAG8N,GA2C3C,GAAC,CAAArP,IAAA,UAAAP,MACD,WAC2B,qBAAZpC,KAAKqR,KACZrR,KAAKqR,GAAGlE,QACRnN,KAAKqR,GAAK,KAElB,GACA,CAAA1O,IAAA,MAAAP,MAKA,WACI,IAAImH,EAAQvJ,KAAKuJ,OAAS,CAAC,EACrBkE,EAASzN,KAAK8H,KAAKyE,OAAS,MAAQ,KACtCJ,EAAO,GAEPnM,KAAK8H,KAAKqE,OACR,QAAUsB,GAAqC,MAA3BK,OAAO9N,KAAK8H,KAAKqE,OAClC,OAASsB,GAAqC,KAA3BK,OAAO9N,KAAK8H,KAAKqE,SACzCA,EAAO,IAAMnM,KAAK8H,KAAKqE,MAGvBnM,KAAK8H,KAAK4F,oBACVnE,EAAMvJ,KAAK8H,KAAK6F,gBAAkB9C,KAGjC7K,KAAK2D,iBACN4F,EAAMsE,IAAM,GAEhB,IAAME,EAAevD,EAAOjB,GAE5B,OAAQkE,EACJ,QAF8C,IAArCzN,KAAK8H,KAAKuE,SAAS2B,QAAQ,KAG5B,IAAMhO,KAAK8H,KAAKuE,SAAW,IAAMrM,KAAK8H,KAAKuE,UACnDF,EACAnM,KAAK8H,KAAKmG,MACTF,EAAa5L,OAAS,IAAM4L,EAAe,GACpD,GACA,CAAApL,IAAA,QAAAP,MAMA,WACI,QAASwO,EACb,KAACK,CAAA,CA3JU,CAAShI,GCRXiJ,GAAa,CACtBC,UAAWlB,GACXlF,QAASF,GCePuG,GAAK,sPACLC,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,GAAMtH,GAClB,IAAM1M,EAAM0M,EAAKuH,EAAIvH,EAAIgD,QAAQ,KAAMzC,EAAIP,EAAIgD,QAAQ,MAC7C,GAANuE,IAAiB,GAANhH,IACXP,EAAMA,EAAI3F,UAAU,EAAGkN,GAAKvH,EAAI3F,UAAUkN,EAAGhH,GAAGiH,QAAQ,KAAM,KAAOxH,EAAI3F,UAAUkG,EAAGP,EAAI7I,SAG9F,IADA,IAAIsQ,EAAIL,GAAGM,KAAK1H,GAAO,IAAKqD,EAAM,CAAC,EAAGnK,EAAI,GACnCA,KACHmK,EAAIgE,GAAMnO,IAAMuO,EAAEvO,IAAM,GAU5B,OARU,GAANqO,IAAiB,GAANhH,IACX8C,EAAIsE,OAASrU,EACb+P,EAAIuE,KAAOvE,EAAIuE,KAAKvN,UAAU,EAAGgJ,EAAIuE,KAAKzQ,OAAS,GAAGqQ,QAAQ,KAAM,KACpEnE,EAAIwE,UAAYxE,EAAIwE,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EnE,EAAIyE,SAAU,GAElBzE,EAAI0E,UAIR,SAAmBnP,EAAKqK,GACpB,IAAM+E,EAAO,WAAYC,EAAQhF,EAAKuE,QAAQQ,EAAM,KAAKvP,MAAM,KACvC,KAApBwK,EAAKtH,MAAM,EAAG,IAA6B,IAAhBsH,EAAK9L,QAChC8Q,EAAMzM,OAAO,EAAG,GAEE,KAAlByH,EAAKtH,OAAO,IACZsM,EAAMzM,OAAOyM,EAAM9Q,OAAS,EAAG,GAEnC,OAAO8Q,CACX,CAboBF,CAAU1E,EAAKA,EAAU,MACzCA,EAAI6E,SAaR,SAAkB7E,EAAK9E,GACnB,IAAMzG,EAAO,CAAC,EAMd,OALAyG,EAAMiJ,QAAQ,6BAA6B,SAAUW,EAAIC,EAAIC,GACrDD,IACAtQ,EAAKsQ,GAAMC,EAEnB,IACOvQ,CACX,CArBmBoQ,CAAS7E,EAAKA,EAAW,OACjCA,CACX,CCnCO,IAAMiF,GAAM,SAAApK,IAAAZ,EAAAA,EAAAA,GAAAgL,EAAApK,GAAA,IAAAX,GAAAC,EAAAA,EAAAA,GAAA8K,GAOf,SAAAA,EAAYjF,GAAgB,IAAAzF,EAAXd,EAAI5F,UAAAC,OAAA,QAAA+L,IAAAhM,UAAA,GAAAA,UAAA,GAAG,CAAC,EA2FT,OA3FU2G,EAAAA,EAAAA,GAAA,KAAAyK,IACtB1K,EAAAL,EAAAxI,KAAA,OACKwT,YAAc,GACflF,GAAO,kBAAoBA,IAC3BvG,EAAOuG,EACPA,EAAM,MAENA,GACAA,EAAMiE,GAAMjE,GACZvG,EAAKuE,SAAWgC,EAAIuE,KACpB9K,EAAKyE,OAA0B,UAAjB8B,EAAInC,UAAyC,QAAjBmC,EAAInC,SAC9CpE,EAAKqE,KAAOkC,EAAIlC,KACZkC,EAAI9E,QACJzB,EAAKyB,MAAQ8E,EAAI9E,QAEhBzB,EAAK8K,OACV9K,EAAKuE,SAAWiG,GAAMxK,EAAK8K,MAAMA,MAErC/K,GAAqByB,EAAAA,EAAAA,GAAAV,GAAOd,GAC5Bc,EAAK2D,OACD,MAAQzE,EAAKyE,OACPzE,EAAKyE,OACe,qBAAbP,UAA4B,WAAaA,SAASE,SAC/DpE,EAAKuE,WAAavE,EAAKqE,OAEvBrE,EAAKqE,KAAOvD,EAAK2D,OAAS,MAAQ,MAEtC3D,EAAKyD,SACDvE,EAAKuE,WACoB,qBAAbL,SAA2BA,SAASK,SAAW,aAC/DzD,EAAKuD,KACDrE,EAAKqE,OACoB,qBAAbH,UAA4BA,SAASG,KACvCH,SAASG,KACTvD,EAAK2D,OACD,MACA,MAClB3D,EAAKsJ,WAAapK,EAAKoK,YAAc,CAAC,UAAW,aACjDtJ,EAAK2K,YAAc,GACnB3K,EAAK4K,cAAgB,EACrB5K,EAAKd,KAAOlG,OAAOuM,OAAO,CACtBF,KAAM,aACNwF,OAAO,EACPjE,iBAAiB,EACjBkE,SAAS,EACT/F,eAAgB,IAChBgG,iBAAiB,EACjBC,kBAAkB,EAClBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,CAAC,EACnBC,qBAAqB,GACtBnM,GACHc,EAAKd,KAAKmG,KACNrF,EAAKd,KAAKmG,KAAKuE,QAAQ,MAAO,KACzB5J,EAAKd,KAAK8L,iBAAmB,IAAM,IACb,kBAApBhL,EAAKd,KAAKyB,QACjBX,EAAKd,KAAKyB,MR/Cf,SAAgB2K,GAGnB,IAFA,IAAIC,EAAM,CAAC,EACPC,EAAQF,EAAGzQ,MAAM,KACZS,EAAI,EAAGmQ,EAAID,EAAMjS,OAAQ+B,EAAImQ,EAAGnQ,IAAK,CAC1C,IAAIoQ,EAAOF,EAAMlQ,GAAGT,MAAM,KAC1B0Q,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,GAC/D,CACA,OAAOH,CACX,CQuC8BlP,CAAO2D,EAAKd,KAAKyB,QAGvCX,EAAK3H,GAAK,KACV2H,EAAK4L,SAAW,KAChB5L,EAAK6L,aAAe,KACpB7L,EAAK8L,YAAc,KAEnB9L,EAAK+L,iBAAmB,KACQ,oBAArB/O,mBACHgD,EAAKd,KAAKmM,sBAIVrL,EAAKgM,0BAA4B,WACzBhM,EAAKiM,YAELjM,EAAKiM,UAAUzO,qBACfwC,EAAKiM,UAAU1H,QAEvB,EACAvH,iBAAiB,eAAgBgD,EAAKgM,2BAA2B,IAE/C,cAAlBhM,EAAKyD,WACLzD,EAAKkM,qBAAuB,WACxBlM,EAAKiB,QAAQ,kBAAmB,CAC5BnB,YAAa,2BAErB,EACA9C,iBAAiB,UAAWgD,EAAKkM,sBAAsB,KAG/DlM,EAAKwG,OAAOxG,CAChB,CAqdC,OApdDE,EAAAA,EAAAA,GAAAwK,EAAA,EAAA3Q,IAAA,kBAAAP,MAOA,SAAgB2S,GACZ,IAAMxL,EAAQ3H,OAAOuM,OAAO,CAAC,EAAGnO,KAAK8H,KAAKyB,OAE1CA,EAAMyL,IdtFU,EcwFhBzL,EAAMsL,UAAYE,EAEd/U,KAAKiB,KACLsI,EAAMqE,IAAM5N,KAAKiB,IACrB,IAAM6G,EAAOlG,OAAOuM,OAAO,CAAC,EAAGnO,KAAK8H,KAAKkM,iBAAiBe,GAAO/U,KAAK8H,KAAM,CACxEyB,MAAAA,EACAC,OAAQxJ,KACRqM,SAAUrM,KAAKqM,SACfE,OAAQvM,KAAKuM,OACbJ,KAAMnM,KAAKmM,OAEf,OAAO,IAAI+F,GAAW6C,GAAMjN,EAChC,GACA,CAAAnF,IAAA,OAAAP,MAKA,WAAO,IACCyS,EADDzL,EAAA,KAEH,GAAIpJ,KAAK8H,KAAK6L,iBACVL,EAAO2B,wBACmC,IAA1CjV,KAAKkS,WAAWlE,QAAQ,aACxB6G,EAAY,gBAEX,IAAI,IAAM7U,KAAKkS,WAAW/P,OAK3B,YAHAnC,KAAKgI,cAAa,WACdoB,EAAKxC,aAAa,QAAS,0BAC/B,GAAG,GAIHiO,EAAY7U,KAAKkS,WAAW,EAChC,CACAlS,KAAK0J,WAAa,UAElB,IACImL,EAAY7U,KAAKkV,gBAAgBL,EACrC,CACA,MAAOtJ,GAGH,OAFAvL,KAAKkS,WAAWiD,aAChBnV,KAAKoP,MAET,CACAyF,EAAUzF,OACVpP,KAAKoV,aAAaP,EACtB,GACA,CAAAlS,IAAA,eAAAP,MAKA,SAAayS,GAAW,IAAAjI,EAAA,KAChB5M,KAAK6U,WACL7U,KAAK6U,UAAUzO,qBAGnBpG,KAAK6U,UAAYA,EAEjBA,EACKlP,GAAG,QAAS3F,KAAKqV,QAAQ/T,KAAKtB,OAC9B2F,GAAG,SAAU3F,KAAKkK,SAAS5I,KAAKtB,OAChC2F,GAAG,QAAS3F,KAAK2O,QAAQrN,KAAKtB,OAC9B2F,GAAG,SAAS,SAAC8C,GAAM,OAAKmE,EAAK/C,QAAQ,kBAAmBpB,EAAO,GACxE,GACA,CAAA9F,IAAA,QAAAP,MAMA,SAAM2S,GAAM,IAAA7H,EAAA,KACJ2H,EAAY7U,KAAKkV,gBAAgBH,GACjCO,GAAS,EACbhC,EAAO2B,uBAAwB,EAC/B,IAAMM,EAAkB,WAChBD,IAEJT,EAAU/E,KAAK,CAAC,CAAEjN,KAAM,OAAQC,KAAM,WACtC+R,EAAU5O,KAAK,UAAU,SAACuP,GACtB,IAAIF,EAEJ,GAAI,SAAWE,EAAI3S,MAAQ,UAAY2S,EAAI1S,KAAM,CAG7C,GAFAoK,EAAKuI,WAAY,EACjBvI,EAAKtG,aAAa,YAAaiO,IAC1BA,EACD,OACJvB,EAAO2B,sBAAwB,cAAgBJ,EAAUE,KACzD7H,EAAK2H,UAAU3T,OAAM,WACboU,GAEA,WAAapI,EAAKxD,aAEtByG,IACAjD,EAAKkI,aAAaP,GAClBA,EAAU/E,KAAK,CAAC,CAAEjN,KAAM,aACxBqK,EAAKtG,aAAa,UAAWiO,GAC7BA,EAAY,KACZ3H,EAAKuI,WAAY,EACjBvI,EAAKwI,QACT,GACJ,KACK,CACD,IAAMvK,EAAM,IAAInC,MAAM,eAEtBmC,EAAI0J,UAAYA,EAAUE,KAC1B7H,EAAKtG,aAAa,eAAgBuE,EACtC,CACJ,IACJ,EACA,SAASwK,IACDL,IAGJA,GAAS,EACTnF,IACA0E,EAAU1H,QACV0H,EAAY,KAChB,CAEA,IAAM9C,EAAU,SAAC5G,GACb,IAAMyK,EAAQ,IAAI5M,MAAM,gBAAkBmC,GAE1CyK,EAAMf,UAAYA,EAAUE,KAC5BY,IACAzI,EAAKtG,aAAa,eAAgBgP,EACtC,EACA,SAASC,IACL9D,EAAQ,mBACZ,CAEA,SAASJ,IACLI,EAAQ,gBACZ,CAEA,SAAS+D,EAAUC,GACXlB,GAAakB,EAAGhB,OAASF,EAAUE,MACnCY,GAER,CAEA,IAAMxF,EAAU,WACZ0E,EAAU1O,eAAe,OAAQoP,GACjCV,EAAU1O,eAAe,QAAS4L,GAClC8C,EAAU1O,eAAe,QAAS0P,GAClC3I,EAAKhH,IAAI,QAASyL,GAClBzE,EAAKhH,IAAI,YAAa4P,EAC1B,EACAjB,EAAU5O,KAAK,OAAQsP,GACvBV,EAAU5O,KAAK,QAAS8L,GACxB8C,EAAU5O,KAAK,QAAS4P,GACxB7V,KAAKiG,KAAK,QAAS0L,GACnB3R,KAAKiG,KAAK,YAAa6P,GACvBjB,EAAUzF,MACd,GACA,CAAAzM,IAAA,SAAAP,MAKA,WAOI,GANApC,KAAK0J,WAAa,OAClB4J,EAAO2B,sBAAwB,cAAgBjV,KAAK6U,UAAUE,KAC9D/U,KAAK4G,aAAa,QAClB5G,KAAK0V,QAGD,SAAW1V,KAAK0J,YAAc1J,KAAK8H,KAAK4L,QAGxC,IAFA,IAAIxP,EAAI,EACFmQ,EAAIrU,KAAKwU,SAASrS,OACjB+B,EAAImQ,EAAGnQ,IACVlE,KAAKgW,MAAMhW,KAAKwU,SAAStQ,GAGrC,GACA,CAAAvB,IAAA,WAAAP,MAKA,SAAS4H,GACL,GAAI,YAAchK,KAAK0J,YACnB,SAAW1J,KAAK0J,YAChB,YAAc1J,KAAK0J,WAInB,OAHA1J,KAAK4G,aAAa,SAAUoD,GAE5BhK,KAAK4G,aAAa,aACVoD,EAAOnH,MACX,IAAK,OACD7C,KAAKiW,YAAYtV,KAAK2R,MAAMtI,EAAOlH,OACnC,MACJ,IAAK,OACD9C,KAAKkW,mBACLlW,KAAKmW,WAAW,QAChBnW,KAAK4G,aAAa,QAClB5G,KAAK4G,aAAa,QAClB,MACJ,IAAK,QACD,IAAMuE,EAAM,IAAInC,MAAM,gBAEtBmC,EAAIiL,KAAOpM,EAAOlH,KAClB9C,KAAK2O,QAAQxD,GACb,MACJ,IAAK,UACDnL,KAAK4G,aAAa,OAAQoD,EAAOlH,MACjC9C,KAAK4G,aAAa,UAAWoD,EAAOlH,MAMpD,GACA,CAAAH,IAAA,cAAAP,MAMA,SAAYU,GACR9C,KAAK4G,aAAa,YAAa9D,GAC/B9C,KAAKiB,GAAK6B,EAAK8K,IACf5N,KAAK6U,UAAUtL,MAAMqE,IAAM9K,EAAK8K,IAChC5N,KAAKwU,SAAWxU,KAAKqW,eAAevT,EAAK0R,UACzCxU,KAAKyU,aAAe3R,EAAK2R,aACzBzU,KAAK0U,YAAc5R,EAAK4R,YACxB1U,KAAKsW,WAAaxT,EAAKwT,WACvBtW,KAAKiN,SAED,WAAajN,KAAK0J,YAEtB1J,KAAKkW,kBACT,GACA,CAAAvT,IAAA,mBAAAP,MAKA,WAAmB,IAAAgL,EAAA,KACfpN,KAAKiI,eAAejI,KAAK2U,kBACzB3U,KAAK2U,iBAAmB3U,KAAKgI,cAAa,WACtCoF,EAAKvD,QAAQ,eACjB,GAAG7J,KAAKyU,aAAezU,KAAK0U,aACxB1U,KAAK8H,KAAK0J,WACVxR,KAAK2U,iBAAiBjD,OAE9B,GACA,CAAA/O,IAAA,UAAAP,MAKA,WACIpC,KAAKuT,YAAY/M,OAAO,EAAGxG,KAAKwT,eAIhCxT,KAAKwT,cAAgB,EACjB,IAAMxT,KAAKuT,YAAYpR,OACvBnC,KAAK4G,aAAa,SAGlB5G,KAAK0V,OAEb,GACA,CAAA/S,IAAA,QAAAP,MAKA,WACI,GAAI,WAAapC,KAAK0J,YAClB1J,KAAK6U,UAAUxL,WACdrJ,KAAKyV,WACNzV,KAAKuT,YAAYpR,OAAQ,CACzB,IAAM2H,EAAU9J,KAAKuW,qBACrBvW,KAAK6U,UAAU/E,KAAKhG,GAGpB9J,KAAKwT,cAAgB1J,EAAQ3H,OAC7BnC,KAAK4G,aAAa,QACtB,CACJ,GACA,CAAAjE,IAAA,qBAAAP,MAMA,WAII,KAH+BpC,KAAKsW,YACR,YAAxBtW,KAAK6U,UAAUE,MACf/U,KAAKuT,YAAYpR,OAAS,GAE1B,OAAOnC,KAAKuT,YAGhB,IADA,IXrYmB3P,EWqYf4S,EAAc,EACTtS,EAAI,EAAGA,EAAIlE,KAAKuT,YAAYpR,OAAQ+B,IAAK,CAC9C,IAAMpB,EAAO9C,KAAKuT,YAAYrP,GAAGpB,KAIjC,GAHIA,IACA0T,GXxYO,kBADI5S,EWyYed,GXlY1C,SAAoBkI,GAEhB,IADA,IAAIyL,EAAI,EAAGtU,EAAS,EACX+B,EAAI,EAAGmQ,EAAIrJ,EAAI7I,OAAQ+B,EAAImQ,EAAGnQ,KACnCuS,EAAIzL,EAAI7G,WAAWD,IACX,IACJ/B,GAAU,EAELsU,EAAI,KACTtU,GAAU,EAELsU,EAAI,OAAUA,GAAK,MACxBtU,GAAU,GAGV+B,IACA/B,GAAU,GAGlB,OAAOA,CACX,CAxBeuU,CAAW9S,GAGf+G,KAAKgM,MAAM/S,EAAIgT,YAAchT,EAAIiT,MAAQ3O,IWsYpChE,EAAI,GAAKsS,EAAcxW,KAAKsW,WAC5B,OAAOtW,KAAKuT,YAAY5M,MAAM,EAAGzC,GAErCsS,GAAe,CACnB,CACA,OAAOxW,KAAKuT,WAChB,GACA,CAAA5Q,IAAA,QAAAP,MAQA,SAAMoT,EAAK1U,EAASgF,GAEhB,OADA9F,KAAKmW,WAAW,UAAWX,EAAK1U,EAASgF,GAClC9F,IACX,GAAC,CAAA2C,IAAA,OAAAP,MACD,SAAKoT,EAAK1U,EAASgF,GAEf,OADA9F,KAAKmW,WAAW,UAAWX,EAAK1U,EAASgF,GAClC9F,IACX,GACA,CAAA2C,IAAA,aAAAP,MASA,SAAWS,EAAMC,EAAMhC,EAASgF,GAS5B,GARI,oBAAsBhD,IACtBgD,EAAKhD,EACLA,OAAOoL,GAEP,oBAAsBpN,IACtBgF,EAAKhF,EACLA,EAAU,MAEV,YAAcd,KAAK0J,YAAc,WAAa1J,KAAK0J,WAAvD,EAGA5I,EAAUA,GAAW,CAAC,GACdgW,UAAW,IAAUhW,EAAQgW,SACrC,IAAM9M,EAAS,CACXnH,KAAMA,EACNC,KAAMA,EACNhC,QAASA,GAEbd,KAAK4G,aAAa,eAAgBoD,GAClChK,KAAKuT,YAAYvN,KAAKgE,GAClBlE,GACA9F,KAAKiG,KAAK,QAASH,GACvB9F,KAAK0V,OAZL,CAaJ,GACA,CAAA/S,IAAA,QAAAP,MAGA,WAAQ,IAAAkM,EAAA,KACEnB,EAAQ,WACVmB,EAAKzE,QAAQ,gBACbyE,EAAKuG,UAAU1H,OACnB,EACM4J,EAAkB,SAAlBA,IACFzI,EAAKpI,IAAI,UAAW6Q,GACpBzI,EAAKpI,IAAI,eAAgB6Q,GACzB5J,GACJ,EACM6J,EAAiB,WAEnB1I,EAAKrI,KAAK,UAAW8Q,GACrBzI,EAAKrI,KAAK,eAAgB8Q,EAC9B,EAoBA,MAnBI,YAAc/W,KAAK0J,YAAc,SAAW1J,KAAK0J,aACjD1J,KAAK0J,WAAa,UACd1J,KAAKuT,YAAYpR,OACjBnC,KAAKiG,KAAK,SAAS,WACXqI,EAAKmH,UACLuB,IAGA7J,GAER,IAEKnN,KAAKyV,UACVuB,IAGA7J,KAGDnN,IACX,GACA,CAAA2C,IAAA,UAAAP,MAKA,SAAQ+I,GACJmI,EAAO2B,uBAAwB,EAC/BjV,KAAK4G,aAAa,QAASuE,GAC3BnL,KAAK6J,QAAQ,kBAAmBsB,EACpC,GACA,CAAAxI,IAAA,UAAAP,MAKA,SAAQqG,EAAQC,GACR,YAAc1I,KAAK0J,YACnB,SAAW1J,KAAK0J,YAChB,YAAc1J,KAAK0J,aAEnB1J,KAAKiI,eAAejI,KAAK2U,kBAEzB3U,KAAK6U,UAAUzO,mBAAmB,SAElCpG,KAAK6U,UAAU1H,QAEfnN,KAAK6U,UAAUzO,qBACoB,oBAAxBC,sBACPA,oBAAoB,eAAgBrG,KAAK4U,2BAA2B,GACpEvO,oBAAoB,UAAWrG,KAAK8U,sBAAsB,IAG9D9U,KAAK0J,WAAa,SAElB1J,KAAKiB,GAAK,KAEVjB,KAAK4G,aAAa,QAAS6B,EAAQC,GAGnC1I,KAAKuT,YAAc,GACnBvT,KAAKwT,cAAgB,EAE7B,GACA,CAAA7Q,IAAA,iBAAAP,MAMA,SAAeoS,GAIX,IAHA,IAAMyC,EAAmB,GACrB/S,EAAI,EACFgT,EAAI1C,EAASrS,OACZ+B,EAAIgT,EAAGhT,KACLlE,KAAKkS,WAAWlE,QAAQwG,EAAStQ,KAClC+S,EAAiBjR,KAAKwO,EAAStQ,IAEvC,OAAO+S,CACX,KAAC3D,CAAA,CAxjBc,CAAS7N,GA0jB5B6N,GAAOpH,SdliBiB,Ee5BAoH,GAAOpH,S,eCFzBhJ,GAA+C,oBAAhBC,YAC/BU,GAAS,SAACD,GACZ,MAAqC,oBAAvBT,YAAYU,OACpBV,YAAYU,OAAOD,GACnBA,EAAIE,kBAAkBX,WAChC,EACMF,GAAWrB,OAAOC,UAAUoB,SAC5BF,GAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxBC,GAASlD,KAAKiD,MAChBmU,GAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxBnU,GAASlD,KAAKqX,MAMf,SAASC,GAASzT,GACrB,OAASV,KAA0BU,aAAeT,aAAeU,GAAOD,KACnEb,IAAkBa,aAAeZ,MACjCmU,IAAkBvT,aAAewT,IAC1C,CACO,SAASE,GAAU1T,EAAK2T,GAC3B,IAAK3T,GAAsB,kBAARA,EACf,OAAO,EAEX,GAAIrD,MAAMC,QAAQoD,GAAM,CACpB,IAAK,IAAIM,EAAI,EAAGmQ,EAAIzQ,EAAIzB,OAAQ+B,EAAImQ,EAAGnQ,IACnC,GAAIoT,GAAU1T,EAAIM,IACd,OAAO,EAGf,OAAO,CACX,CACA,GAAImT,GAASzT,GACT,OAAO,EAEX,GAAIA,EAAI2T,QACkB,oBAAf3T,EAAI2T,QACU,IAArBrV,UAAUC,OACV,OAAOmV,GAAU1T,EAAI2T,UAAU,GAEnC,IAAK,IAAM5U,KAAOiB,EACd,GAAIhC,OAAOC,UAAUC,eAAe/B,KAAK6D,EAAKjB,IAAQ2U,GAAU1T,EAAIjB,IAChE,OAAO,EAGf,OAAO,CACX,CCzCO,SAAS6U,GAAkBxN,GAC9B,IAAMyN,EAAU,GACVC,EAAa1N,EAAOlH,KACpB6U,EAAO3N,EAGb,OAFA2N,EAAK7U,KAAO8U,GAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQtV,OACpB,CAAE6H,OAAQ2N,EAAMF,QAASA,EACpC,CACA,SAASG,GAAmB9U,EAAM2U,GAC9B,IAAK3U,EACD,OAAOA,EACX,GAAIuU,GAASvU,GAAO,CAChB,IAAMgV,EAAc,CAAEC,cAAc,EAAMtN,IAAKgN,EAAQtV,QAEvD,OADAsV,EAAQzR,KAAKlD,GACNgV,CACX,CACK,GAAIvX,MAAMC,QAAQsC,GAAO,CAE1B,IADA,IAAMkV,EAAU,IAAIzX,MAAMuC,EAAKX,QACtB+B,EAAI,EAAGA,EAAIpB,EAAKX,OAAQ+B,IAC7B8T,EAAQ9T,GAAK0T,GAAmB9U,EAAKoB,GAAIuT,GAE7C,OAAOO,CACX,CACK,GAAoB,kBAATlV,KAAuBA,aAAgBiI,MAAO,CAC1D,IAAMiN,EAAU,CAAC,EACjB,IAAK,IAAMrV,KAAOG,EACVlB,OAAOC,UAAUC,eAAe/B,KAAK+C,EAAMH,KAC3CqV,EAAQrV,GAAOiV,GAAmB9U,EAAKH,GAAM8U,IAGrD,OAAOO,CACX,CACA,OAAOlV,CACX,CASO,SAASmV,GAAkBjO,EAAQyN,GAGtC,OAFAzN,EAAOlH,KAAOoV,GAAmBlO,EAAOlH,KAAM2U,UACvCzN,EAAO6N,YACP7N,CACX,CACA,SAASkO,GAAmBpV,EAAM2U,GAC9B,IAAK3U,EACD,OAAOA,EACX,GAAIA,IAA8B,IAAtBA,EAAKiV,aAAuB,CAIpC,GAHyC,kBAAbjV,EAAK2H,KAC7B3H,EAAK2H,KAAO,GACZ3H,EAAK2H,IAAMgN,EAAQtV,OAEnB,OAAOsV,EAAQ3U,EAAK2H,KAGpB,MAAM,IAAIzB,MAAM,sBAExB,CACK,GAAIzI,MAAMC,QAAQsC,GACnB,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAKX,OAAQ+B,IAC7BpB,EAAKoB,GAAKgU,GAAmBpV,EAAKoB,GAAIuT,QAGzC,GAAoB,kBAAT3U,EACZ,IAAK,IAAMH,KAAOG,EACVlB,OAAOC,UAAUC,eAAe/B,KAAK+C,EAAMH,KAC3CG,EAAKH,GAAOuV,GAAmBpV,EAAKH,GAAM8U,IAItD,OAAO3U,CACX,CC1EO,IACIqV,GADEjM,GAAW,GAExB,SAAWiM,GACPA,EAAWA,EAAoB,QAAI,GAAK,UACxCA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAkB,MAAI,GAAK,QACtCA,EAAWA,EAAgB,IAAI,GAAK,MACpCA,EAAWA,EAA0B,cAAI,GAAK,gBAC9CA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAuB,WAAI,GAAK,YAC9C,CARD,CAQGA,KAAeA,GAAa,CAAC,IAIzB,IAAMC,GAAO,WAMhB,SAAAA,EAAYC,IAAUxP,EAAAA,EAAAA,GAAA,KAAAuP,GAClBpY,KAAKqY,SAAWA,CACpB,CA2DC,OA1DDvP,EAAAA,EAAAA,GAAAsP,EAAA,EAAAzV,IAAA,SAAAP,MAMA,SAAOwB,GACH,OAAIA,EAAIf,OAASsV,GAAWG,OAAS1U,EAAIf,OAASsV,GAAWI,MACrDjB,GAAU1T,GAWX,CAAC5D,KAAKwY,eAAe5U,IAVb5D,KAAKyY,eAAe,CACvB5V,KAAMe,EAAIf,OAASsV,GAAWG,MACxBH,GAAWO,aACXP,GAAWQ,WACjBC,IAAKhV,EAAIgV,IACT9V,KAAMc,EAAId,KACV7B,GAAI2C,EAAI3C,IAKxB,GACA,CAAA0B,IAAA,iBAAAP,MAGA,SAAewB,GAEX,IAAIoH,EAAM,GAAKpH,EAAIf,KAmBnB,OAjBIe,EAAIf,OAASsV,GAAWO,cACxB9U,EAAIf,OAASsV,GAAWQ,aACxB3N,GAAOpH,EAAIiU,YAAc,KAIzBjU,EAAIgV,KAAO,MAAQhV,EAAIgV,MACvB5N,GAAOpH,EAAIgV,IAAM,KAGjB,MAAQhV,EAAI3C,KACZ+J,GAAOpH,EAAI3C,IAGX,MAAQ2C,EAAId,OACZkI,GAAOrK,KAAKC,UAAUgD,EAAId,KAAM9C,KAAKqY,WAElCrN,CACX,GACA,CAAArI,IAAA,iBAAAP,MAKA,SAAewB,GACX,IAAMiV,EAAiBrB,GAAkB5T,GACnC+T,EAAO3X,KAAKwY,eAAeK,EAAe7O,QAC1CyN,EAAUoB,EAAepB,QAE/B,OADAA,EAAQqB,QAAQnB,GACTF,CACX,KAACW,CAAA,CAnEe,GA0EPW,GAAO,SAAA7P,IAAAZ,EAAAA,EAAAA,GAAAyQ,EAAA7P,GAAA,IAAAX,GAAAC,EAAAA,EAAAA,GAAAuQ,GAMhB,SAAAA,EAAYC,GAAS,IAAApQ,EAEM,OAFNC,EAAAA,EAAAA,GAAA,KAAAkQ,IACjBnQ,EAAAL,EAAAxI,KAAA,OACKiZ,QAAUA,EAAQpQ,CAC3B,CAyIC,OAxIDE,EAAAA,EAAAA,GAAAiQ,EAAA,EAAApW,IAAA,MAAAP,MAKA,SAAIwB,GACA,IAAIoG,EACJ,GAAmB,kBAARpG,EAAkB,CACzB,GAAI5D,KAAKiZ,cACL,MAAM,IAAIjQ,MAAM,mDAGpB,IAAMkQ,GADNlP,EAAShK,KAAKmZ,aAAavV,IACEf,OAASsV,GAAWO,aAC7CQ,GAAiBlP,EAAOnH,OAASsV,GAAWQ,YAC5C3O,EAAOnH,KAAOqW,EAAgBf,GAAWG,MAAQH,GAAWI,IAE5DvY,KAAKiZ,cAAgB,IAAIG,GAAoBpP,GAElB,IAAvBA,EAAO6N,aACP1W,GAAAsI,EAAAA,EAAAA,GAAAsP,EAAAlX,WAAA,qBAAA9B,KAAA,KAAmB,UAAWiK,IAKlC7I,GAAAsI,EAAAA,EAAAA,GAAAsP,EAAAlX,WAAA,qBAAA9B,KAAA,KAAmB,UAAWiK,EAEtC,KACK,KAAIqN,GAASzT,KAAQA,EAAIW,OAe1B,MAAM,IAAIyE,MAAM,iBAAmBpF,GAbnC,IAAK5D,KAAKiZ,cACN,MAAM,IAAIjQ,MAAM,qDAGhBgB,EAAShK,KAAKiZ,cAAcI,eAAezV,MAGvC5D,KAAKiZ,cAAgB,KACrB9X,GAAAsI,EAAAA,EAAAA,GAAAsP,EAAAlX,WAAA,qBAAA9B,KAAA,KAAmB,UAAWiK,GAM1C,CACJ,GACA,CAAArH,IAAA,eAAAP,MAMA,SAAa4I,GACT,IAAI9G,EAAI,EAEFY,EAAI,CACNjC,KAAMiL,OAAO9C,EAAI5F,OAAO,KAE5B,QAA2B8I,IAAvBiK,GAAWrT,EAAEjC,MACb,MAAM,IAAImG,MAAM,uBAAyBlE,EAAEjC,MAG/C,GAAIiC,EAAEjC,OAASsV,GAAWO,cACtB5T,EAAEjC,OAASsV,GAAWQ,WAAY,CAElC,IADA,IAAMW,EAAQpV,EAAI,EACS,MAApB8G,EAAI5F,SAASlB,IAAcA,GAAK8G,EAAI7I,SAC3C,IAAMoX,EAAMvO,EAAI3F,UAAUiU,EAAOpV,GACjC,GAAIqV,GAAOzL,OAAOyL,IAA0B,MAAlBvO,EAAI5F,OAAOlB,GACjC,MAAM,IAAI8E,MAAM,uBAEpBlE,EAAE+S,YAAc/J,OAAOyL,EAC3B,CAEA,GAAI,MAAQvO,EAAI5F,OAAOlB,EAAI,GAAI,CAE3B,IADA,IAAMoV,EAAQpV,EAAI,IACTA,GAAG,CAER,GAAI,MADM8G,EAAI5F,OAAOlB,GAEjB,MACJ,GAAIA,IAAM8G,EAAI7I,OACV,KACR,CACA2C,EAAE8T,IAAM5N,EAAI3F,UAAUiU,EAAOpV,EACjC,MAEIY,EAAE8T,IAAM,IAGZ,IAAMY,EAAOxO,EAAI5F,OAAOlB,EAAI,GAC5B,GAAI,KAAOsV,GAAQ1L,OAAO0L,IAASA,EAAM,CAErC,IADA,IAAMF,EAAQpV,EAAI,IACTA,GAAG,CACR,IAAMuS,EAAIzL,EAAI5F,OAAOlB,GACrB,GAAI,MAAQuS,GAAK3I,OAAO2I,IAAMA,EAAG,GAC3BvS,EACF,KACJ,CACA,GAAIA,IAAM8G,EAAI7I,OACV,KACR,CACA2C,EAAE7D,GAAK6M,OAAO9C,EAAI3F,UAAUiU,EAAOpV,EAAI,GAC3C,CAEA,GAAI8G,EAAI5F,SAASlB,GAAI,CACjB,IAAMuV,EAAUzZ,KAAK0Z,SAAS1O,EAAI2O,OAAOzV,IACzC,IAAI6U,EAAQa,eAAe9U,EAAEjC,KAAM4W,GAI/B,MAAM,IAAIzQ,MAAM,mBAHhBlE,EAAEhC,KAAO2W,CAKjB,CACA,OAAO3U,CACX,GAAC,CAAAnC,IAAA,WAAAP,MACD,SAAS4I,GACL,IACI,OAAOrK,KAAK2R,MAAMtH,EAAKhL,KAAKgZ,QAChC,CACA,MAAOzN,GACH,OAAO,CACX,CACJ,GAAC,CAAA5I,IAAA,UAAAP,MAoBD,WACQpC,KAAKiZ,gBACLjZ,KAAKiZ,cAAcY,yBACnB7Z,KAAKiZ,cAAgB,KAE7B,IAAC,EAAAtW,IAAA,iBAAAP,MAxBD,SAAsBS,EAAM4W,GACxB,OAAQ5W,GACJ,KAAKsV,GAAW2B,QACZ,MAA0B,kBAAZL,EAClB,KAAKtB,GAAW4B,WACZ,YAAmB7L,IAAZuL,EACX,KAAKtB,GAAW6B,cACZ,MAA0B,kBAAZP,GAA2C,kBAAZA,EACjD,KAAKtB,GAAWG,MAChB,KAAKH,GAAWO,aACZ,OAAOnY,MAAMC,QAAQiZ,IAAYA,EAAQtX,OAAS,EACtD,KAAKgW,GAAWI,IAChB,KAAKJ,GAAWQ,WACZ,OAAOpY,MAAMC,QAAQiZ,GAEjC,KAACV,CAAA,CAlJe,CAAStT,GAqKvB2T,GAAmB,WACrB,SAAAA,EAAYpP,IAAQnB,EAAAA,EAAAA,GAAA,KAAAuQ,GAChBpZ,KAAKgK,OAASA,EACdhK,KAAKyX,QAAU,GACfzX,KAAKia,UAAYjQ,CACrB,CAyBC,OAxBDlB,EAAAA,EAAAA,GAAAsQ,EAAA,EAAAzW,IAAA,iBAAAP,MAQA,SAAe8X,GAEX,GADAla,KAAKyX,QAAQzR,KAAKkU,GACdla,KAAKyX,QAAQtV,SAAWnC,KAAKia,UAAUpC,YAAa,CAEpD,IAAM7N,EAASiO,GAAkBjY,KAAKia,UAAWja,KAAKyX,SAEtD,OADAzX,KAAK6Z,yBACE7P,CACX,CACA,OAAO,IACX,GACA,CAAArH,IAAA,yBAAAP,MAGA,WACIpC,KAAKia,UAAY,KACjBja,KAAKyX,QAAU,EACnB,KAAC2B,CAAA,CA9BoB,GCrQlB,SAASzT,GAAG/B,EAAKkO,EAAIhM,GAExB,OADAlC,EAAI+B,GAAGmM,EAAIhM,GACJ,WACHlC,EAAIsC,IAAI4L,EAAIhM,EAChB,CACJ,CCEA,IAAMqU,GAAkBvY,OAAOwY,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbtU,eAAgB,IA0BPmN,GAAM,SAAApK,IAAAZ,EAAAA,EAAAA,GAAAgL,EAAApK,GAAA,IAAAX,GAAAC,EAAAA,EAAAA,GAAA8K,GAIf,SAAAA,EAAYoH,EAAI9B,EAAK9Q,GAAM,IAAAc,EAoDP,OApDOC,EAAAA,EAAAA,GAAA,KAAAyK,IACvB1K,EAAAL,EAAAxI,KAAA,OAeK4a,WAAY,EAKjB/R,EAAKgS,WAAY,EAIjBhS,EAAKiS,cAAgB,GAIrBjS,EAAKkS,WAAa,GAOlBlS,EAAKmS,OAAS,GAKdnS,EAAKoS,UAAY,EACjBpS,EAAKqS,IAAM,EACXrS,EAAKsS,KAAO,CAAC,EACbtS,EAAKuS,MAAQ,CAAC,EACdvS,EAAK8R,GAAKA,EACV9R,EAAKgQ,IAAMA,EACP9Q,GAAQA,EAAKsT,OACbxS,EAAKwS,KAAOtT,EAAKsT,MAErBxS,EAAKyS,MAAQzZ,OAAOuM,OAAO,CAAC,EAAGrG,GAC3Bc,EAAK8R,GAAGY,cACR1S,EAAKwG,OAAOxG,CACpB,CAmuBC,OAluBDE,EAAAA,EAAAA,GAAAwK,EAAA,EAAA3Q,IAAA,eAAAtB,IAcA,WACI,OAAQrB,KAAK2a,SACjB,GACA,CAAAhY,IAAA,YAAAP,MAKA,WACI,IAAIpC,KAAKub,KAAT,CAEA,IAAMb,EAAK1a,KAAK0a,GAChB1a,KAAKub,KAAO,CACR5V,GAAG+U,EAAI,OAAQ1a,KAAKuR,OAAOjQ,KAAKtB,OAChC2F,GAAG+U,EAAI,SAAU1a,KAAKwb,SAASla,KAAKtB,OACpC2F,GAAG+U,EAAI,QAAS1a,KAAK+R,QAAQzQ,KAAKtB,OAClC2F,GAAG+U,EAAI,QAAS1a,KAAK2R,QAAQrQ,KAAKtB,OAN5B,CAQd,GACA,CAAA2C,IAAA,SAAAtB,IAiBA,WACI,QAASrB,KAAKub,IAClB,GACA,CAAA5Y,IAAA,UAAAP,MAUA,WACI,OAAIpC,KAAK2a,YAET3a,KAAKyb,YACAzb,KAAK0a,GAAkB,eACxB1a,KAAK0a,GAAGtL,OACR,SAAWpP,KAAK0a,GAAGgB,aACnB1b,KAAKuR,UALEvR,IAOf,GACA,CAAA2C,IAAA,OAAAP,MAGA,WACI,OAAOpC,KAAKqa,SAChB,GACA,CAAA1X,IAAA,OAAAP,MAeA,WAAc,QAAAgF,EAAAlF,UAAAC,OAANuE,EAAI,IAAAnG,MAAA6G,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJZ,EAAIY,GAAApF,UAAAoF,GAGR,OAFAZ,EAAKoS,QAAQ,WACb9Y,KAAKyG,KAAKpE,MAAMrC,KAAM0G,GACf1G,IACX,GACA,CAAA2C,IAAA,OAAAP,MAiBA,SAAK0P,GACD,GAAIqI,GAAgBrY,eAAegQ,GAC/B,MAAM,IAAI9I,MAAM,IAAM8I,EAAG7O,WAAa,8BACzC,QAAA0Y,EAAAzZ,UAAAC,OAHOuE,EAAI,IAAAnG,MAAAob,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlV,EAAIkV,EAAA,GAAA1Z,UAAA0Z,GAKZ,GADAlV,EAAKoS,QAAQhH,GACT9R,KAAKqb,MAAMQ,UAAY7b,KAAKmb,MAAMW,YAAc9b,KAAKmb,MAAMY,SAE3D,OADA/b,KAAKgc,YAAYtV,GACV1G,KAEX,IAAMgK,EAAS,CACXnH,KAAMsV,GAAWG,MACjBxV,KAAM4D,EAEVsD,QAAiB,CAAC,GAGlB,GAFAA,EAAOlJ,QAAQgW,UAAmC,IAAxB9W,KAAKmb,MAAMrE,SAEjC,oBAAsBpQ,EAAKA,EAAKvE,OAAS,GAAI,CAC7C,IAAMlB,EAAKjB,KAAKib,MACVgB,EAAMvV,EAAKwV,MACjBlc,KAAKmc,qBAAqBlb,EAAIgb,GAC9BjS,EAAO/I,GAAKA,CAChB,CACA,IAAMmb,EAAsBpc,KAAK0a,GAAG2B,QAChCrc,KAAK0a,GAAG2B,OAAOxH,WACf7U,KAAK0a,GAAG2B,OAAOxH,UAAUxL,SAY7B,OAXsBrJ,KAAKmb,MAAMY,YAAcK,IAAwBpc,KAAK2a,aAGnE3a,KAAK2a,WACV3a,KAAKsc,wBAAwBtS,GAC7BhK,KAAKgK,OAAOA,IAGZhK,KAAK8a,WAAW9U,KAAKgE,IAEzBhK,KAAKmb,MAAQ,CAAC,EACPnb,IACX,GACA,CAAA2C,IAAA,uBAAAP,MAGA,SAAqBnB,EAAIgb,GAAK,IACtBM,EADsBnT,EAAA,KAEpBsG,EAAwC,QAA7B6M,EAAKvc,KAAKmb,MAAMzL,eAA4B,IAAP6M,EAAgBA,EAAKvc,KAAKqb,MAAMmB,WACtF,QAAgBtO,IAAZwB,EAAJ,CAKA,IAAM+M,EAAQzc,KAAK0a,GAAG1S,cAAa,kBACxBoB,EAAK8R,KAAKja,GACjB,IAAK,IAAIiD,EAAI,EAAGA,EAAIkF,EAAK0R,WAAW3Y,OAAQ+B,IACpCkF,EAAK0R,WAAW5W,GAAGjD,KAAOA,GAC1BmI,EAAK0R,WAAWtU,OAAOtC,EAAG,GAGlC+X,EAAIlc,KAAKqJ,EAAM,IAAIJ,MAAM,2BAC7B,GAAG0G,GACH1P,KAAKkb,KAAKja,GAAM,WAEZmI,EAAKsR,GAAGzS,eAAewU,GAAO,QAAAC,EAAAxa,UAAAC,OAFduE,EAAI,IAAAnG,MAAAmc,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJjW,EAAIiW,GAAAza,UAAAya,GAGpBV,EAAI5Z,MAAM+G,EAAM,CAAC,MAAIoC,OAAK9E,GAC9B,CAfA,MAFI1G,KAAKkb,KAAKja,GAAMgb,CAkBxB,GACA,CAAAtZ,IAAA,cAAAP,MAgBA,SAAY0P,GAAa,QAAAlF,EAAA,KAAAgQ,EAAA1a,UAAAC,OAANuE,EAAI,IAAAnG,MAAAqc,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnW,EAAImW,EAAA,GAAA3a,UAAA2a,GAEnB,IAAMC,OAAiC5O,IAAvBlO,KAAKmb,MAAMzL,cAAmDxB,IAA1BlO,KAAKqb,MAAMmB,WAC/D,OAAO,IAAI9L,SAAQ,SAACC,EAASoM,GACzBrW,EAAKV,MAAK,SAACgX,EAAMC,GACb,OAAIH,EACOE,EAAOD,EAAOC,GAAQrM,EAAQsM,GAG9BtM,EAAQqM,EAEvB,IACApQ,EAAKnG,KAAIpE,MAATuK,EAAI,CAAMkF,GAAEtG,OAAK9E,GACrB,GACJ,GACA,CAAA/D,IAAA,cAAAP,MAKA,SAAYsE,GAAM,IACVuV,EADU/O,EAAA,KAEuB,oBAA1BxG,EAAKA,EAAKvE,OAAS,KAC1B8Z,EAAMvV,EAAKwV,OAEf,IAAMlS,EAAS,CACX/I,GAAIjB,KAAKgb,YACTkC,SAAU,EACVC,SAAS,EACTzW,KAAAA,EACAyU,MAAOvZ,OAAOuM,OAAO,CAAE2N,WAAW,GAAQ9b,KAAKmb,QAEnDzU,EAAKV,MAAK,SAACmF,GACP,GAAInB,IAAWkD,EAAK6N,OAAO,GAA3B,CAKA,GADyB,OAAR5P,EAETnB,EAAOkT,SAAWhQ,EAAKmO,MAAMQ,UAC7B3O,EAAK6N,OAAO5F,QACR8G,GACAA,EAAI9Q,SAMZ,GADA+B,EAAK6N,OAAO5F,QACR8G,EAAK,SAAAmB,EAAAlb,UAAAC,OAhBEkb,EAAY,IAAA9c,MAAA6c,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,EAAA,GAAApb,UAAAob,GAiBnBrB,EAAG5Z,WAAC,EAAD,CAAC,MAAImJ,OAAK6R,GACjB,CAGJ,OADArT,EAAOmT,SAAU,EACVjQ,EAAKqQ,aAjBZ,CAkBJ,IACAvd,KAAK+a,OAAO/U,KAAKgE,GACjBhK,KAAKud,aACT,GACA,CAAA5a,IAAA,cAAAP,MAMA,WAA2B,IAAfob,EAAKtb,UAAAC,OAAA,QAAA+L,IAAAhM,UAAA,IAAAA,UAAA,GACb,GAAKlC,KAAK2a,WAAoC,IAAvB3a,KAAK+a,OAAO5Y,OAAnC,CAGA,IAAM6H,EAAShK,KAAK+a,OAAO,GACvB/Q,EAAOmT,UAAYK,IAGvBxT,EAAOmT,SAAU,EACjBnT,EAAOkT,WACPld,KAAKmb,MAAQnR,EAAOmR,MACpBnb,KAAKyG,KAAKpE,MAAMrC,KAAMgK,EAAOtD,MAR7B,CASJ,GACA,CAAA/D,IAAA,SAAAP,MAMA,SAAO4H,GACHA,EAAO4O,IAAM5Y,KAAK4Y,IAClB5Y,KAAK0a,GAAG+C,QAAQzT,EACpB,GACA,CAAArH,IAAA,SAAAP,MAKA,WAAS,IAAAgL,EAAA,KACmB,mBAAbpN,KAAKob,KACZpb,KAAKob,MAAK,SAACtY,GACPsK,EAAKsQ,mBAAmB5a,EAC5B,IAGA9C,KAAK0d,mBAAmB1d,KAAKob,KAErC,GACA,CAAAzY,IAAA,qBAAAP,MAMA,SAAmBU,GACf9C,KAAKgK,OAAO,CACRnH,KAAMsV,GAAW2B,QACjBhX,KAAM9C,KAAK2d,KACL/b,OAAOuM,OAAO,CAAEyP,IAAK5d,KAAK2d,KAAME,OAAQ7d,KAAK8d,aAAehb,GAC5DA,GAEd,GACA,CAAAH,IAAA,UAAAP,MAMA,SAAQ+I,GACCnL,KAAK2a,WACN3a,KAAK4G,aAAa,gBAAiBuE,EAE3C,GACA,CAAAxI,IAAA,UAAAP,MAOA,SAAQqG,EAAQC,GACZ1I,KAAK2a,WAAY,SACV3a,KAAKiB,GACZjB,KAAK4G,aAAa,aAAc6B,EAAQC,EAC5C,GACA,CAAA/F,IAAA,WAAAP,MAMA,SAAS4H,GAEL,GADsBA,EAAO4O,MAAQ5Y,KAAK4Y,IAG1C,OAAQ5O,EAAOnH,MACX,KAAKsV,GAAW2B,QACR9P,EAAOlH,MAAQkH,EAAOlH,KAAK8K,IAC3B5N,KAAK+d,UAAU/T,EAAOlH,KAAK8K,IAAK5D,EAAOlH,KAAK8a,KAG5C5d,KAAK4G,aAAa,gBAAiB,IAAIoC,MAAM,8LAEjD,MACJ,KAAKmP,GAAWG,MAChB,KAAKH,GAAWO,aACZ1Y,KAAKge,QAAQhU,GACb,MACJ,KAAKmO,GAAWI,IAChB,KAAKJ,GAAWQ,WACZ3Y,KAAKie,MAAMjU,GACX,MACJ,KAAKmO,GAAW4B,WACZ/Z,KAAKke,eACL,MACJ,KAAK/F,GAAW6B,cACZha,KAAKme,UACL,IAAMhT,EAAM,IAAInC,MAAMgB,EAAOlH,KAAKsb,SAElCjT,EAAIrI,KAAOkH,EAAOlH,KAAKA,KACvB9C,KAAK4G,aAAa,gBAAiBuE,GAG/C,GACA,CAAAxI,IAAA,UAAAP,MAMA,SAAQ4H,GACJ,IAAMtD,EAAOsD,EAAOlH,MAAQ,GACxB,MAAQkH,EAAO/I,IACfyF,EAAKV,KAAKhG,KAAKic,IAAIjS,EAAO/I,KAE1BjB,KAAK2a,UACL3a,KAAKqe,UAAU3X,GAGf1G,KAAK6a,cAAc7U,KAAKpE,OAAOwY,OAAO1T,GAE9C,GAAC,CAAA/D,IAAA,YAAAP,MACD,SAAUsE,GACN,GAAI1G,KAAKse,eAAiBte,KAAKse,cAAcnc,OAAQ,CACjD,IACgCoc,EAD1B1X,EAAY7G,KAAKse,cAAc3X,QAAQ6X,GAAAC,EAAAA,GAAAA,GACtB5X,GAAS,IAAhC,IAAA2X,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkC,CAAfL,EAAAnc,MACNC,MAAMrC,KAAM0G,EACzB,CAAC,OAAAyE,IAAAqT,EAAAjT,EAAAJ,GAAA,SAAAqT,EAAAK,GAAA,CACL,CACA1d,GAAAsI,EAAAA,EAAAA,GAAA6J,EAAAzR,WAAA,aAAWQ,MAAMrC,KAAM0G,GACnB1G,KAAK2d,MAAQjX,EAAKvE,QAA2C,kBAA1BuE,EAAKA,EAAKvE,OAAS,KACtDnC,KAAK8d,YAAcpX,EAAKA,EAAKvE,OAAS,GAE9C,GACA,CAAAQ,IAAA,MAAAP,MAKA,SAAInB,GACA,IAAM+F,EAAOhH,KACT8e,GAAO,EACX,OAAO,WAEH,IAAIA,EAAJ,CAEAA,GAAO,EAAK,QAAAC,EAAA7c,UAAAC,OAJIuE,EAAI,IAAAnG,MAAAwe,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJtY,EAAIsY,GAAA9c,UAAA8c,GAKpBhY,EAAKgD,OAAO,CACRnH,KAAMsV,GAAWI,IACjBtX,GAAIA,EACJ6B,KAAM4D,GALA,CAOd,CACJ,GACA,CAAA/D,IAAA,QAAAP,MAMA,SAAM4H,GACF,IAAMiS,EAAMjc,KAAKkb,KAAKlR,EAAO/I,IACzB,oBAAsBgb,IACtBA,EAAI5Z,MAAMrC,KAAMgK,EAAOlH,aAChB9C,KAAKkb,KAAKlR,EAAO/I,IAIhC,GACA,CAAA0B,IAAA,YAAAP,MAKA,SAAUnB,EAAI2c,GACV5d,KAAKiB,GAAKA,EACVjB,KAAK4a,UAAYgD,GAAO5d,KAAK2d,OAASC,EACtC5d,KAAK2d,KAAOC,EACZ5d,KAAK2a,WAAY,EACjB3a,KAAKif,eACLjf,KAAK4G,aAAa,WAClB5G,KAAKud,aAAY,EACrB,GACA,CAAA5a,IAAA,eAAAP,MAKA,WAAe,IAAAkM,EAAA,KACXtO,KAAK6a,cAAcnY,SAAQ,SAACgE,GAAI,OAAK4H,EAAK+P,UAAU3X,EAAK,IACzD1G,KAAK6a,cAAgB,GACrB7a,KAAK8a,WAAWpY,SAAQ,SAACsH,GACrBsE,EAAKgO,wBAAwBtS,GAC7BsE,EAAKtE,OAAOA,EAChB,IACAhK,KAAK8a,WAAa,EACtB,GACA,CAAAnY,IAAA,eAAAP,MAKA,WACIpC,KAAKme,UACLne,KAAK2R,QAAQ,uBACjB,GACA,CAAAhP,IAAA,UAAAP,MAOA,WACQpC,KAAKub,OAELvb,KAAKub,KAAK7Y,SAAQ,SAACwc,GAAU,OAAKA,GAAY,IAC9Clf,KAAKub,UAAOrN,GAEhBlO,KAAK0a,GAAa,SAAE1a,KACxB,GACA,CAAA2C,IAAA,aAAAP,MAgBA,WAUI,OATIpC,KAAK2a,WACL3a,KAAKgK,OAAO,CAAEnH,KAAMsV,GAAW4B,aAGnC/Z,KAAKme,UACDne,KAAK2a,WAEL3a,KAAK2R,QAAQ,wBAEV3R,IACX,GACA,CAAA2C,IAAA,QAAAP,MAKA,WACI,OAAOpC,KAAKua,YAChB,GACA,CAAA5X,IAAA,WAAAP,MASA,SAAS0U,GAEL,OADA9W,KAAKmb,MAAMrE,SAAWA,EACf9W,IACX,GACA,CAAA2C,IAAA,WAAAtB,IASA,WAEI,OADArB,KAAKmb,MAAMY,UAAW,EACf/b,IACX,GACA,CAAA2C,IAAA,UAAAP,MAaA,SAAQsN,GAEJ,OADA1P,KAAKmb,MAAMzL,QAAUA,EACd1P,IACX,GACA,CAAA2C,IAAA,QAAAP,MAWA,SAAM+c,GAGF,OAFAnf,KAAKse,cAAgBte,KAAKse,eAAiB,GAC3Cte,KAAKse,cAActY,KAAKmZ,GACjBnf,IACX,GACA,CAAA2C,IAAA,aAAAP,MAWA,SAAW+c,GAGP,OAFAnf,KAAKse,cAAgBte,KAAKse,eAAiB,GAC3Cte,KAAKse,cAAcxF,QAAQqG,GACpBnf,IACX,GACA,CAAA2C,IAAA,SAAAP,MAkBA,SAAO+c,GACH,IAAKnf,KAAKse,cACN,OAAOte,KAEX,GAAImf,GAEA,IADA,IAAMtY,EAAY7G,KAAKse,cACdpa,EAAI,EAAGA,EAAI2C,EAAU1E,OAAQ+B,IAClC,GAAIib,IAAatY,EAAU3C,GAEvB,OADA2C,EAAUL,OAAOtC,EAAG,GACblE,UAKfA,KAAKse,cAAgB,GAEzB,OAAOte,IACX,GACA,CAAA2C,IAAA,eAAAP,MAIA,WACI,OAAOpC,KAAKse,eAAiB,EACjC,GACA,CAAA3b,IAAA,gBAAAP,MAaA,SAAc+c,GAGV,OAFAnf,KAAKof,sBAAwBpf,KAAKof,uBAAyB,GAC3Dpf,KAAKof,sBAAsBpZ,KAAKmZ,GACzBnf,IACX,GACA,CAAA2C,IAAA,qBAAAP,MAaA,SAAmB+c,GAGf,OAFAnf,KAAKof,sBAAwBpf,KAAKof,uBAAyB,GAC3Dpf,KAAKof,sBAAsBtG,QAAQqG,GAC5Bnf,IACX,GACA,CAAA2C,IAAA,iBAAAP,MAkBA,SAAe+c,GACX,IAAKnf,KAAKof,sBACN,OAAOpf,KAEX,GAAImf,GAEA,IADA,IAAMtY,EAAY7G,KAAKof,sBACdlb,EAAI,EAAGA,EAAI2C,EAAU1E,OAAQ+B,IAClC,GAAIib,IAAatY,EAAU3C,GAEvB,OADA2C,EAAUL,OAAOtC,EAAG,GACblE,UAKfA,KAAKof,sBAAwB,GAEjC,OAAOpf,IACX,GACA,CAAA2C,IAAA,uBAAAP,MAIA,WACI,OAAOpC,KAAKof,uBAAyB,EACzC,GACA,CAAAzc,IAAA,0BAAAP,MAOA,SAAwB4H,GACpB,GAAIhK,KAAKof,uBAAyBpf,KAAKof,sBAAsBjd,OAAQ,CACjE,IACgCkd,EAD1BxY,EAAY7G,KAAKof,sBAAsBzY,QAAQ2Y,GAAAb,EAAAA,GAAAA,GAC9B5X,GAAS,IAAhC,IAAAyY,EAAAZ,MAAAW,EAAAC,EAAAX,KAAAC,MAAkC,CAAfS,EAAAjd,MACNC,MAAMrC,KAAMgK,EAAOlH,KAChC,CAAC,OAAAqI,IAAAmU,EAAA/T,EAAAJ,GAAA,SAAAmU,EAAAT,GAAA,CACL,CACJ,KAACvL,CAAA,CA5xBc,CAAS7N,GC7BrB,SAAS8Z,GAAQzX,GACpBA,EAAOA,GAAQ,CAAC,EAChB9H,KAAKwf,GAAK1X,EAAK2X,KAAO,IACtBzf,KAAK0f,IAAM5X,EAAK4X,KAAO,IACvB1f,KAAK2f,OAAS7X,EAAK6X,QAAU,EAC7B3f,KAAK4f,OAAS9X,EAAK8X,OAAS,GAAK9X,EAAK8X,QAAU,EAAI9X,EAAK8X,OAAS,EAClE5f,KAAK6f,SAAW,CACpB,CAOAN,GAAQ1d,UAAUrC,SAAW,WACzB,IAAIggB,EAAKxf,KAAKwf,GAAK7U,KAAKmV,IAAI9f,KAAK2f,OAAQ3f,KAAK6f,YAC9C,GAAI7f,KAAK4f,OAAQ,CACb,IAAIG,EAAOpV,KAAKqV,SACZC,EAAYtV,KAAKC,MAAMmV,EAAO/f,KAAK4f,OAASJ,GAChDA,EAAoC,IAAN,EAAxB7U,KAAKC,MAAa,GAAPmV,IAAuBP,EAAKS,EAAYT,EAAKS,CAClE,CACA,OAAgC,EAAzBtV,KAAK8U,IAAID,EAAIxf,KAAK0f,IAC7B,EAMAH,GAAQ1d,UAAUqe,MAAQ,WACtBlgB,KAAK6f,SAAW,CACpB,EAMAN,GAAQ1d,UAAUse,OAAS,SAAUV,GACjCzf,KAAKwf,GAAKC,CACd,EAMAF,GAAQ1d,UAAUue,OAAS,SAAUV,GACjC1f,KAAK0f,IAAMA,CACf,EAMAH,GAAQ1d,UAAUwe,UAAY,SAAUT,GACpC5f,KAAK4f,OAASA,CAClB,EC3DO,IAAMU,GAAO,SAAApX,IAAAZ,EAAAA,EAAAA,GAAAgY,EAAApX,GAAA,IAAAX,GAAAC,EAAAA,EAAAA,GAAA8X,GAChB,SAAAA,EAAYjS,EAAKvG,GAAM,IAAAc,EACf2T,GADe1T,EAAAA,EAAAA,GAAA,KAAAyX,IAEnB1X,EAAAL,EAAAxI,KAAA,OACKwgB,KAAO,CAAC,EACb3X,EAAK2S,KAAO,GACRlN,GAAO,kBAAoBA,IAC3BvG,EAAOuG,EACPA,OAAMH,IAEVpG,EAAOA,GAAQ,CAAC,GACXmG,KAAOnG,EAAKmG,MAAQ,aACzBrF,EAAKd,KAAOA,EACZD,GAAqByB,EAAAA,EAAAA,GAAAV,GAAOd,GAC5Bc,EAAK4X,cAAmC,IAAtB1Y,EAAK0Y,cACvB5X,EAAK6X,qBAAqB3Y,EAAK2Y,sBAAwBC,KACvD9X,EAAK+X,kBAAkB7Y,EAAK6Y,mBAAqB,KACjD/X,EAAKgY,qBAAqB9Y,EAAK8Y,sBAAwB,KACvDhY,EAAKiY,oBAAwD,QAAnCtE,EAAKzU,EAAK+Y,2BAAwC,IAAPtE,EAAgBA,EAAK,IAC1F3T,EAAKkY,QAAU,IAAIvB,GAAQ,CACvBE,IAAK7W,EAAK+X,oBACVjB,IAAK9W,EAAKgY,uBACVhB,OAAQhX,EAAKiY,wBAEjBjY,EAAK8G,QAAQ,MAAQ5H,EAAK4H,QAAU,IAAQ5H,EAAK4H,SACjD9G,EAAK8S,YAAc,SACnB9S,EAAKyF,IAAMA,EACX,IAAM0S,EAAUjZ,EAAKkZ,QAAUA,EAKf,OAJhBpY,EAAKqY,QAAU,IAAIF,EAAQ3I,QAC3BxP,EAAKsY,QAAU,IAAIH,EAAQhI,QAC3BnQ,EAAK0S,cAAoC,IAArBxT,EAAKqZ,YACrBvY,EAAK0S,cACL1S,EAAKwG,OAAOxG,CACpB,CAgUC,OAhUAE,EAAAA,EAAAA,GAAAwX,EAAA,EAAA3d,IAAA,eAAAP,MACD,SAAagf,GACT,OAAKlf,UAAUC,QAEfnC,KAAKqhB,gBAAkBD,EAChBphB,MAFIA,KAAKqhB,aAGpB,GAAC,CAAA1e,IAAA,uBAAAP,MACD,SAAqBgf,GACjB,YAAUlT,IAANkT,EACOphB,KAAKshB,uBAChBthB,KAAKshB,sBAAwBF,EACtBphB,KACX,GAAC,CAAA2C,IAAA,oBAAAP,MACD,SAAkBgf,GACd,IAAI7E,EACJ,YAAUrO,IAANkT,EACOphB,KAAKuhB,oBAChBvhB,KAAKuhB,mBAAqBH,EACF,QAAvB7E,EAAKvc,KAAK8gB,eAA4B,IAAPvE,GAAyBA,EAAG4D,OAAOiB,GAC5DphB,KACX,GAAC,CAAA2C,IAAA,sBAAAP,MACD,SAAoBgf,GAChB,IAAI7E,EACJ,YAAUrO,IAANkT,EACOphB,KAAKwhB,sBAChBxhB,KAAKwhB,qBAAuBJ,EACJ,QAAvB7E,EAAKvc,KAAK8gB,eAA4B,IAAPvE,GAAyBA,EAAG8D,UAAUe,GAC/DphB,KACX,GAAC,CAAA2C,IAAA,uBAAAP,MACD,SAAqBgf,GACjB,IAAI7E,EACJ,YAAUrO,IAANkT,EACOphB,KAAKyhB,uBAChBzhB,KAAKyhB,sBAAwBL,EACL,QAAvB7E,EAAKvc,KAAK8gB,eAA4B,IAAPvE,GAAyBA,EAAG6D,OAAOgB,GAC5DphB,KACX,GAAC,CAAA2C,IAAA,UAAAP,MACD,SAAQgf,GACJ,OAAKlf,UAAUC,QAEfnC,KAAK0hB,SAAWN,EACTphB,MAFIA,KAAK0hB,QAGpB,GACA,CAAA/e,IAAA,uBAAAP,MAMA,YAESpC,KAAK2hB,eACN3hB,KAAKqhB,eACqB,IAA1BrhB,KAAK8gB,QAAQjB,UAEb7f,KAAK4hB,WAEb,GACA,CAAAjf,IAAA,OAAAP,MAOA,SAAK0D,GAAI,IAAAsD,EAAA,KACL,IAAKpJ,KAAK0b,YAAY1N,QAAQ,QAC1B,OAAOhO,KACXA,KAAKqc,OAAS,IAAIwF,GAAO7hB,KAAKqO,IAAKrO,KAAK8H,MACxC,IAAM0B,EAASxJ,KAAKqc,OACdrV,EAAOhH,KACbA,KAAK0b,YAAc,UACnB1b,KAAK8hB,eAAgB,EAErB,IAAMC,EAAiBpc,GAAG6D,EAAQ,QAAQ,WACtCxC,EAAKuK,SACLzL,GAAMA,GACV,IAEMkc,EAAWrc,GAAG6D,EAAQ,SAAS,SAAC2B,GAClCnE,EAAKmJ,UACLnJ,EAAK0U,YAAc,SACnBtS,EAAKxC,aAAa,QAASuE,GACvBrF,EACAA,EAAGqF,GAIHnE,EAAKib,sBAEb,IACA,IAAI,IAAUjiB,KAAK0hB,SAAU,CACzB,IAAMhS,EAAU1P,KAAK0hB,SACL,IAAZhS,GACAqS,IAGJ,IAAMtF,EAAQzc,KAAKgI,cAAa,WAC5B+Z,IACAvY,EAAO2D,QAEP3D,EAAO/C,KAAK,QAAS,IAAIuC,MAAM,WACnC,GAAG0G,GACC1P,KAAK8H,KAAK0J,WACViL,EAAM/K,QAEV1R,KAAKub,KAAKvV,MAAK,WACXkc,aAAazF,EACjB,GACJ,CAGA,OAFAzc,KAAKub,KAAKvV,KAAK+b,GACf/hB,KAAKub,KAAKvV,KAAKgc,GACRhiB,IACX,GACA,CAAA2C,IAAA,UAAAP,MAMA,SAAQ0D,GACJ,OAAO9F,KAAKoP,KAAKtJ,EACrB,GACA,CAAAnD,IAAA,SAAAP,MAKA,WAEIpC,KAAKmQ,UAELnQ,KAAK0b,YAAc,OACnB1b,KAAK4G,aAAa,QAElB,IAAM4C,EAASxJ,KAAKqc,OACpBrc,KAAKub,KAAKvV,KAAKL,GAAG6D,EAAQ,OAAQxJ,KAAKmiB,OAAO7gB,KAAKtB,OAAQ2F,GAAG6D,EAAQ,OAAQxJ,KAAKoiB,OAAO9gB,KAAKtB,OAAQ2F,GAAG6D,EAAQ,QAASxJ,KAAK+R,QAAQzQ,KAAKtB,OAAQ2F,GAAG6D,EAAQ,QAASxJ,KAAK2R,QAAQrQ,KAAKtB,OAAQ2F,GAAG3F,KAAKkhB,QAAS,UAAWlhB,KAAKqiB,UAAU/gB,KAAKtB,OACvP,GACA,CAAA2C,IAAA,SAAAP,MAKA,WACIpC,KAAK4G,aAAa,OACtB,GACA,CAAAjE,IAAA,SAAAP,MAKA,SAAOU,GACH,IACI9C,KAAKkhB,QAAQoB,IAAIxf,EACrB,CACA,MAAOyI,GACHvL,KAAK2R,QAAQ,cAAepG,EAChC,CACJ,GACA,CAAA5I,IAAA,YAAAP,MAKA,SAAU4H,GAAQ,IAAA4C,EAAA,KAEd6D,GAAS,WACL7D,EAAKhG,aAAa,SAAUoD,EAChC,GAAGhK,KAAKgI,aACZ,GACA,CAAArF,IAAA,UAAAP,MAKA,SAAQ+I,GACJnL,KAAK4G,aAAa,QAASuE,EAC/B,GACA,CAAAxI,IAAA,SAAAP,MAMA,SAAOwW,EAAK9Q,GACR,IAAI0B,EAASxJ,KAAKugB,KAAK3H,GAQvB,OAPKpP,EAIIxJ,KAAKsb,eAAiB9R,EAAO+Y,QAClC/Y,EAAO6Q,WAJP7Q,EAAS,IAAI8J,GAAOtT,KAAM4Y,EAAK9Q,GAC/B9H,KAAKugB,KAAK3H,GAAOpP,GAKdA,CACX,GACA,CAAA7G,IAAA,WAAAP,MAMA,SAASoH,GAEL,IADA,IACAgZ,EAAA,EAAAC,EADa7gB,OAAOa,KAAKzC,KAAKugB,MACRiC,EAAAC,EAAAtgB,OAAAqgB,IAAE,CAAnB,IAAM5J,EAAG6J,EAAAD,GAEV,GADexiB,KAAKugB,KAAK3H,GACd2J,OACP,MAER,CACAviB,KAAK0iB,QACT,GACA,CAAA/f,IAAA,UAAAP,MAMA,SAAQ4H,GAEJ,IADA,IAAM8C,EAAiB9M,KAAKihB,QAAQzW,OAAOR,GAClC9F,EAAI,EAAGA,EAAI4I,EAAe3K,OAAQ+B,IACvClE,KAAKqc,OAAOtS,MAAM+C,EAAe5I,GAAI8F,EAAOlJ,QAEpD,GACA,CAAA6B,IAAA,UAAAP,MAKA,WACIpC,KAAKub,KAAK7Y,SAAQ,SAACwc,GAAU,OAAKA,GAAY,IAC9Clf,KAAKub,KAAKpZ,OAAS,EACnBnC,KAAKkhB,QAAQ/C,SACjB,GACA,CAAAxb,IAAA,SAAAP,MAKA,WACIpC,KAAK8hB,eAAgB,EACrB9hB,KAAK2hB,eAAgB,EACrB3hB,KAAK2R,QAAQ,gBACT3R,KAAKqc,QACLrc,KAAKqc,OAAOlP,OACpB,GACA,CAAAxK,IAAA,aAAAP,MAKA,WACI,OAAOpC,KAAK0iB,QAChB,GACA,CAAA/f,IAAA,UAAAP,MAKA,SAAQqG,EAAQC,GACZ1I,KAAKmQ,UACLnQ,KAAK8gB,QAAQZ,QACblgB,KAAK0b,YAAc,SACnB1b,KAAK4G,aAAa,QAAS6B,EAAQC,GAC/B1I,KAAKqhB,gBAAkBrhB,KAAK8hB,eAC5B9hB,KAAK4hB,WAEb,GACA,CAAAjf,IAAA,YAAAP,MAKA,WAAY,IAAA8K,EAAA,KACR,GAAIlN,KAAK2hB,eAAiB3hB,KAAK8hB,cAC3B,OAAO9hB,KACX,IAAMgH,EAAOhH,KACb,GAAIA,KAAK8gB,QAAQjB,UAAY7f,KAAKshB,sBAC9BthB,KAAK8gB,QAAQZ,QACblgB,KAAK4G,aAAa,oBAClB5G,KAAK2hB,eAAgB,MAEpB,CACD,IAAMgB,EAAQ3iB,KAAK8gB,QAAQthB,WAC3BQ,KAAK2hB,eAAgB,EACrB,IAAMlF,EAAQzc,KAAKgI,cAAa,WACxBhB,EAAK8a,gBAET5U,EAAKtG,aAAa,oBAAqBI,EAAK8Z,QAAQjB,UAEhD7Y,EAAK8a,eAET9a,EAAKoI,MAAK,SAACjE,GACHA,GACAnE,EAAK2a,eAAgB,EACrB3a,EAAK4a,YACL1U,EAAKtG,aAAa,kBAAmBuE,IAGrCnE,EAAK4b,aAEb,IACJ,GAAGD,GACC3iB,KAAK8H,KAAK0J,WACViL,EAAM/K,QAEV1R,KAAKub,KAAKvV,MAAK,WACXkc,aAAazF,EACjB,GACJ,CACJ,GACA,CAAA9Z,IAAA,cAAAP,MAKA,WACI,IAAMygB,EAAU7iB,KAAK8gB,QAAQjB,SAC7B7f,KAAK2hB,eAAgB,EACrB3hB,KAAK8gB,QAAQZ,QACblgB,KAAK4G,aAAa,YAAaic,EACnC,KAACvC,CAAA,CAjWe,CAAS7a,GCAvBqd,GAAQ,CAAC,EACf,SAAS9e,GAAOqK,EAAKvG,GACE,kBAARuG,IACPvG,EAAOuG,EACPA,OAAMH,GAGV,IASIwM,EATEqI,ECHH,SAAa1U,GAAqB,IAAhBJ,EAAI/L,UAAAC,OAAA,QAAA+L,IAAAhM,UAAA,GAAAA,UAAA,GAAG,GAAI8gB,EAAG9gB,UAAAC,OAAA,EAAAD,UAAA,QAAAgM,EAC/BtK,EAAMyK,EAEV2U,EAAMA,GAA4B,qBAAbhX,UAA4BA,SAC7C,MAAQqC,IACRA,EAAM2U,EAAI9W,SAAW,KAAO8W,EAAIpQ,MAEjB,kBAARvE,IACH,MAAQA,EAAIjJ,OAAO,KAEfiJ,EADA,MAAQA,EAAIjJ,OAAO,GACb4d,EAAI9W,SAAWmC,EAGf2U,EAAIpQ,KAAOvE,GAGpB,sBAAsB4U,KAAK5U,KAExBA,EADA,qBAAuB2U,EACjBA,EAAI9W,SAAW,KAAOmC,EAGtB,WAAaA,GAI3BzK,EAAM0O,GAAMjE,IAGXzK,EAAIuI,OACD,cAAc8W,KAAKrf,EAAIsI,UACvBtI,EAAIuI,KAAO,KAEN,eAAe8W,KAAKrf,EAAIsI,YAC7BtI,EAAIuI,KAAO,QAGnBvI,EAAIqK,KAAOrK,EAAIqK,MAAQ,IACvB,IACM2E,GADkC,IAA3BhP,EAAIgP,KAAK5E,QAAQ,KACV,IAAMpK,EAAIgP,KAAO,IAAMhP,EAAIgP,KAS/C,OAPAhP,EAAI3C,GAAK2C,EAAIsI,SAAW,MAAQ0G,EAAO,IAAMhP,EAAIuI,KAAO8B,EAExDrK,EAAIsf,KACAtf,EAAIsI,SACA,MACA0G,GACCoQ,GAAOA,EAAI7W,OAASvI,EAAIuI,KAAO,GAAK,IAAMvI,EAAIuI,MAChDvI,CACX,CD7CmBuf,CAAI9U,GADnBvG,EAAOA,GAAQ,CAAC,GACamG,MAAQ,cAC/B0E,EAASoQ,EAAOpQ,OAChB1R,EAAK8hB,EAAO9hB,GACZgN,EAAO8U,EAAO9U,KACdmV,EAAgBN,GAAM7hB,IAAOgN,KAAQ6U,GAAM7hB,GAAU,KAkB3D,OAjBsB6G,EAAKub,UACvBvb,EAAK,0BACL,IAAUA,EAAKwb,WACfF,EAGA1I,EAAK,IAAI4F,GAAQ3N,EAAQ7K,IAGpBgb,GAAM7hB,KACP6hB,GAAM7hB,GAAM,IAAIqf,GAAQ3N,EAAQ7K,IAEpC4S,EAAKoI,GAAM7hB,IAEX8hB,EAAOxZ,QAAUzB,EAAKyB,QACtBzB,EAAKyB,MAAQwZ,EAAO7P,UAEjBwH,EAAGlR,OAAOuZ,EAAO9U,KAAMnG,EAClC,CAGAlG,OAAOuM,OAAOnK,GAAQ,CAClBsc,QAAAA,GACAhN,OAAAA,GACAoH,GAAI1W,GACJqW,QAASrW,I","sources":["../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["src","_ref","callback","_ref2$volume","_ref2","volume","playbackRate","_ref2$playbackRate","soundEnabled","_ref2$soundEnabled","interrupt","_ref2$interrupt","onload","delegated","_objectWithoutPropertiesLoose","HowlConstructor","React__default","isMounted","duration","_React$useState","setDuration","sound","_React$useState2","setSound","handleLoad","call","this","current","then","mod","_mod$Howl","Howl","_extends","Array","isArray","rate","useEffect","JSON","stringify","play","options","forceSoundEnabled","stop","id","pause","_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","fileReader","FileReader","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","BASE64_OVERHEAD","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","socket","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","onPause","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","undefined","assign","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","_this9","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","deconstruction","unshift","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_a","ackTimeout","timer","_len3","_key3","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","done","f","sent","_len6","_key6","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}